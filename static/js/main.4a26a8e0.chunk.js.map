{"version":3,"sources":["AppContextApi.js","controller/firebaseInitializer.js","controller/crudModules.js","controller/firebaseAuthentication.js","views/barChart/barchart.js","views/circularProgresschart/circularProgress.js","views/dashbord.js","views/SearchBar.js","views/zTable/ZTableUtil.js","utils.js","views/zTable/Ztable.js","views/utility/zripple.js","views/CircularZButton.js","modules/dataMapOrder.js","views/DateYearPicker.js","views/AllAccountPayments.js","views/YearlyChecking.js","views/Settings.js","controller/contexts.js","modules/StockRecordsDataContext.js","views/printMethod.js","controller/DataContext.js","views/floatingActions.js","views/selectDataByYear.js","views/miniMizerWithTable.js","views/DisplayDataAndTotal.js","views/StockRecord.js","modules/SalesRecordContext.js","views/SalesRecord.js","views/NotAdminViews/DashBord.js","views/NotAdminViews/notAdminHome.js","views/home.js","views/Login.js","App.js","reportWebVitals.js","index.js"],"names":["ContextCreator","React","createContext","ContextProvider","logout","setState","showDialog","login","state","Provider","value","this","props","children","PureComponent","ContextConsumer","Consumer","firebase","initializeApp","appId","process","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fireStore","firestore","defaultModule","usersCollection","collection","stockRecords","salesRecords","salesRecordsAwaitingApproval","paymentRecords","addUsersType","uid","data","a","doc","set","merge","getAllUserData","get","addStockRecords","presentYear","updateStockRecords","presentMonth","update","FieldValue","arrayUnion","getAllStockRecordsByYearStream","setData","onSnapshot","includeMetadataChanges","exists","isStockRecordDataExist","addSalesRecords","updateSalesRecords","isSalesRecordDataExist","addAllPaymentRecordsRecords","updatePaymentRecords","isPaymentRecordDataExist","addAllSalesAwaitingAproval","updateSalesAwaitingAproval","deleteSalesAwaitingAproval","delete","getAllSalesAwaitingAprovalStream","isSalesAwaitingAproval","recordTotals","updateSalesTotal","increment","updateProductTotal","createProductSalesTotalifNotExist","checkIfProductSalesTotalExist","getTotalProductAndSalesStream","salesAndProduct","monthly","daly","signupWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","loginWithEmailAndPassword","signInWithEmailAndPassword","signOut","BarGroup","width","d","yMid","barHeight","xMid","className","x","y","alignmentBaseline","transform","name","barPadding","height","fill","BarChart","setDalyDataFromStore","setbyDays","byDay","setMonthlyDataFromStore","setbyMonth","byMonth","toggleByDay","isbyday","console","log","toggleByMonth","getTotalMonthAndDayStream","barGroups","map","i","Card","style","opacity","onClick","Component","CircularProgressWithLabel","Box","position","display","CircularProgress","variant","size","top","left","bottom","right","alignItems","justifyContent","textAlign","Typography","component","fontSize","color","Math","round","CircularStatic","useState","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","progress","useStyles","makeStyles","theme","flexMain","flexDirection","FavoriteMain","teansition","overflow","Favheading","backgroundColor","FavBody","marginRight","spacing","overflowY","GridMain","gridTemplateColumns","gridTemplateRows","gridGap","grid1","fontStyle","gridRow","gridColumn","margin","grid3","grid4","padding","grid2","cardflex","cardMain","marginLeft","marginTop","Dashbord","classes","productsTotal","totalSales","totalsState","setTotalsState","Date","getFullYear","toString","totalGoodsSend","setTotalGoodsSend","setTotalsStateValue","setTotalGoods","DisplayAwaiting","onclick","month","year","val","index","manipulateData","Amount","seconds","Timestamp","nanoseconds","toDate","dd","getDate","mm","getMonth","yyyy","min","getMinutes","hou","getHours","drawerOpen","Object","keys","textTransform","root","input","flex","iconButton","CustomizedInputBase","anchorEl","setAnchorEl","handleClose","Paper","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","InputBase","placeholder","inputProps","ZTableUtil","getNumberTotalsFromData","forEach","obj","values","checkIfItsNumberVal","numberVal","num","colIndex","rowIndex","number","parseInt","Number","isFinite","isNaN","addToSumVal","findIndex","e","push","newval","oldVal","orderList","list","mapOrder","newList","undefined","unordered","sort","reduce","result","key","monthIndex","January","February","March","April","May","June","July","August","September","October","November","December","printData","divToPrint","document","getElementById","cloneNode","verticalAlign","thead","getElementsByTagName","tfoot","tbody","newWin","window","write","outerHTML","print","close","Table","headStyle","headClassName","thStyle","thClassName","tdStyle","tdClassName","withFooter","totalFooterVal","ZtableUtil","ZTableutil","sortedData","THead","TRow","TFooter","initialState","mouseX","mouseY","anchorReference","anchorPosition","replace","RegExp","getKey","substring","find","memo","getElementsByClassName","card","cursor","boxShadow","borderRadius","CircularButton","tip","Child","title","icon","stockRecordMapOrder","Description","Quantity","Unit_Cost","Total_Cost","paymentsRecordMapOrder","Supply_Number","City","Deptors_Name","saleRecordMapOrder","Receiver","container","flexWrap","textField","DatePickers","getDateArray","dateRef","useRef","date","defaultVal","noValidate","TextField","inputRef","label","type","defaultValue","InputLabelProps","shrink","onChange","target","floatButton","rootEditText","heading","gridMain","payMentList","addPayment","AccountPayment","enqueueSnackbar","useSnackbar","getDateAsArray","string","split","dateState","setDate","setAllPayentDataWithFirestore","message","newdata","getDateKey","getAllPaymentRecordsByYearStream","dateString","zIndex","BasicTextFields","PrintIcon","supplyNumberRef","cityRef","NameRef","AmountRef","handleClickVariant","supplyNumberRefValue","current","cityRefValue","NameRefValue","AmountRefValue","accountPayment","then","catch","error","errorMessage","years","focus","autoComplete","FormControl","FilledInput","endAdornment","InputAdornment","aria-describedby","FormHelperText","Button","YearlyChecking","addButton","palette","primary","light","float","main","devider","Setting","AddMoreUser","loading","setLoading","isAdmin","setIsAdmin","handleLoading","isLoading","emailFieldReference","passwordFieldReference","checkRef","addSupply","Divider","required","FormControlLabel","control","Checkbox","labelPlacement","signupWithEmailAndPasswordDelegate","CircularProgressModule","user","isUSersAdmin","errorCode","code","Fade","in","transitionDelay","unmountOnExit","Datacontext","StockRecordContext","SalesRecordContext","StockRecordsProvider","loadFromFirestore","Year","setProductTotal","total","productTotal","selecteYearData","setSelectedYear","allYearData","selectedMonthData","StockRecordsConsumer","StyledMenu","withStyles","paper","border","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","common","white","CustomizedMenus","ListItemIcon","ListItemText","tableID","downloadLink","filename","dataType","tableHTML","createElement","body","appendChild","navigator","msSaveOrOpenBlob","blob","Blob","href","download","click","exportTableToExcel","DataContextProvider","toggleExpandAll","expandAll","DataContextConsumer","FlaotingActionColumnButtons","displayEdit","onClickAdd","PlusOne","ExpandMoreIcon","ExpandLessIcon","FadeMenu","setPresentYear","TransitionComponent","typography","pxToRem","fontWeight","fontWeightRegular","Container","AccordionMain","secondaryHeading","text","secondary","SimpleAccordion","isAwaiting","expanded","setExpanded","Accordion","panel","closeall","AccordionSummary","expandIcon","AccordionDetails","Data","withBorder","Transition","forwardRef","ref","Slide","direction","backdrop","drawer","dialog","dialogContent","DiaplayDataAndTotals","DialogChild","dialogTitle","awaitingData","setOpen","load","setLoad","oldProps","newProps","Dialog","fullScreen","aria-labelledby","DialogTitle","DialogContent","DialogActions","Backdrop","newlyAddedRecords","minHeight","maxHeight","dialogMain","StockRecord","AddStockRecorsPage","descriptionRef","quantityRef","unitCostRef","totalCostRef","Total_Unit_Cost","stkdata","addDataToState","old","description","quantity","unitCost","TotalCost","stockRecord","totalsExist","ProductTotal","disabled","SalesRecordsProvider","setSalesTotal","salesTotal","setawaitingData","awaitingAproval","getAllSalesRecordsByYearStream","SalesRecordsConsumer","AddsalesRecordPage","amountEditText","receiversEditText","salesdata","amountEdit","receiversEdit","salesRecord","btnFlx","alignSelf","approvedBtn","declineBtn","selectedAwaitedData","setSelectedAwaited","selectedYear","selectedMonth","selectemMonthAndYear","setSelectedMonthAndYear","setSelectedAwaitedData","ApproveDeclinePan","onAccept","drawerWidth","appBar","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","background","default","PermanentDrawerLeft","selectedPage","selectAPage","CssBaseline","AppBar","Toolbar","noWrap","Drawer","anchor","List","DashboardIcon","MoneyIcon","ExitToAppIcon","item","ListItem","button","drawerSubContainer","Avatar","menuButton","hide","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","CompanyName","setSelectedOpen","addEventListener","edge","DataUsageIcon","PaymentIcon","HistoryIcon","SettingsIcon","signoutOfApp","page","Home","usersID","setISAdmin","userTypeAdmin","StylesProvider","injectFirst","useStyle","dialogForm2","Login","emailRef","passwordRef","SetIsLoading","setUserId","setIsLoad","autoFocus","fullWidth","DialogContentText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4a26a8e0.chunk.js","sourcesContent":["import React from \"react\"\r\n// import { onAutStateChange } from './controller/firebaseAuthentication'\r\n\r\nconst ContextCreator = React.createContext();\r\n\r\nclass ContextProvider extends React.PureComponent {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showDialog: true,\r\n        }\r\n    }\r\n\r\n\r\n    logout = () => {\r\n        this.setState({ showDialog: true })\r\n    }\r\n\r\n    login = () => {\r\n        this.setState({ showDialog: false })\r\n    }\r\n\r\n    // loginAsAdmin = (isadmin) => {\r\n    //     this.setState({showDialog: false })\r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <ContextCreator.Provider\r\n                value={\r\n                    {   login:this.login,\r\n                        showDialog:this.state.showDialog,\r\n                    }\r\n                }\r\n            >\r\n                {this.props.children}\r\n            </ContextCreator.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ContextConsumer = ContextCreator.Consumer;\r\n\r\nexport { ContextConsumer, ContextProvider }","\nimport firebase from \"firebase/app\";\n\nconst config = {\n\n  appId: process.env.REACT_APP_APP_ID,\n  // apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  apiKey:\"AIzaSyBtqof1mYKlp581OUHaDW5pXsujB80xulk\",\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n};\n\n\nexport default firebase.initializeApp(config);","import defaultModule from './firebaseInitializer'\nimport firebase from 'firebase'\n\n\n\nconst fireStore = firebase.firestore(defaultModule);\n\n\n// var db = firebase.database(defaultModule);\n\nconst usersCollection = fireStore.collection('usersPreviledge');\nconst stockRecords = fireStore.collection('stockRecords');\nconst salesRecords = fireStore.collection('salesRecords');\nconst salesRecordsAwaitingApproval = fireStore.collection('salesRecordsAwaitingApproval');\n// const recordTotals = fireStore.collection('recordTotals');\n\n\nconst paymentRecords = fireStore.collection('paymentRecords');\n\n\nexport async function getAllProjects() {\n    return await fireStore.collection(\"users\").get();\n\n}\n\nexport async function addUsersType(uid, data) {\n    usersCollection.doc(uid).set(data, { merge: true })\n\n}\n\n\nexport async function getAllUserData(uid) {\n    return await usersCollection.doc(uid).get();\n}\n\n////////// stock records\n\n\nexport async function addStockRecords(presentYear, data) {\n    await stockRecords.doc(presentYear).set(data, { merge: true })\n    // stockRecords.doc(presentYear).set(data,{merge:true})\n}\n\nexport async function updateStockRecords(presentYear, presentMonth, data) {\n    return await stockRecords.doc(presentYear).update(presentMonth, firebase.firestore.FieldValue.arrayUnion(data));\n}\n\n// export async function addStockRecords(presentYear, data) {\n//     return await stockRecords.doc(presentYear).set(data)\n// }\n\n\nexport async function getAllStockRecordsByYear(presentYear) {\n    const snapShort = await stockRecords.doc(presentYear).get();\n    return snapShort.data();\n}\n\nexport async function getAllStockRecordsByYearStream(presentYear, setData) {\n    stockRecords.doc(presentYear).onSnapshot({\n        includeMetadataChanges: true\n    }, (doc) => {\n        if (doc.exists)\n            setData(doc)\n    })\n}\n\n\n\n\nexport async function getAllStockRecordsList() {\n    const snapShort = await stockRecords.get();\n    return snapShort.docs.map(doc => doc.data());\n}\n\n\nexport async function isStockRecordDataExist(presentYear) {\n    let doc = await stockRecords.doc(presentYear).get();\n    return doc.exists\n}\n\n\n\n\n\n\n//////////// sales records\n\n\nexport async function addSalesRecords(presentYear, data) {\n    await salesRecords.doc(presentYear).set(data, { merge: true })\n}\n\nexport async function updateSalesRecords(presentYear, presentMonth, data) {\n    return await salesRecords.doc(presentYear).update(presentMonth, firebase.firestore.FieldValue.arrayUnion(data));\n}\n\n\nexport async function getAllSalesRecordsByYear(presentYear) {\n    const snapShort = await salesRecords.doc(presentYear).get();\n    return snapShort.data();\n}\n\nexport async function getAllSalesRecordsByYearStream(presentYear, setData) {\n    salesRecords.doc(presentYear).onSnapshot({\n        includeMetadataChanges: true\n    }, (doc) => {\n        if (doc.exists)\n            setData(doc)\n    })\n}\n\n\nexport async function getAllSalesRecordsList() {\n    const snapShort = await salesRecords.get();\n    return snapShort.docs.map(doc => doc.data());\n}\n\n\nexport async function isSalesRecordDataExist(presentYear) {\n    let doc = await salesRecords.doc(presentYear).get();\n    return doc.exists\n}\n\n\n\n//////////////////  all payment Records\n\n\nexport async function addAllPaymentRecordsRecords(presentYear, data) {\n    await paymentRecords.doc(presentYear).set(data, { merge: true })\n}\n\nexport async function updatePaymentRecords(presentYear, presentMonth, data) {\n    return await paymentRecords.doc(presentYear).update(presentMonth, firebase.firestore.FieldValue.arrayUnion(data));\n}\n\n\nexport async function getAllPaymentRecordsByYear(presentYear) {\n    const snapShort = await paymentRecords.doc(presentYear).get();\n    return snapShort.data();\n}\n\nexport async function getAllPaymentRecordsByYearStream(presentYear, setData) {\n    paymentRecords.doc(presentYear).onSnapshot({\n        includeMetadataChanges: true\n    }, (doc) => {\n        if (doc.exists){\n            setData(doc)\n        }\n    })\n}\n\n\nexport async function getAllPaymentRecordsList() {\n    const snapShort = await paymentRecords.get();\n    return snapShort.docs.map(doc => doc.data());\n}\n\n\nexport async function isPaymentRecordDataExist(presentYear) {\n    let doc = await paymentRecords.doc(presentYear).get();\n    return doc.exists\n}\n\n\n\n/// sales Awaiting approval\n\n\nexport async function addAllSalesAwaitingAproval(presentYear, data) {\n    await salesRecordsAwaitingApproval.doc(presentYear).set(data, { merge: true })\n}\n\nexport async function updateSalesAwaitingAproval(presentYear, presentMonth, data) {\n    return await salesRecordsAwaitingApproval.doc(presentYear).update(presentMonth, firebase.firestore.FieldValue.arrayUnion(data));\n}\n\n\nexport async function deleteSalesAwaitingAproval(presentYear, presentMonth) {\n    return await salesRecordsAwaitingApproval.doc(presentYear).delete()\n}\n\nexport async function getAllSalesAwaitingAproval(presentYear) {\n    const snapShort = await salesRecordsAwaitingApproval.doc(presentYear).get();\n    return snapShort.data();\n}\n\nexport async function getAllSalesAwaitingAprovalStream(presentYear, setData) {\n    salesRecordsAwaitingApproval.doc(presentYear).onSnapshot({\n        includeMetadataChanges: true\n    }, (doc) => {\n        if (doc.exists){\n            setData(doc)\n        }\n    })\n}\n\nexport async function isSalesAwaitingAproval(presentYear) {\n    let doc = await salesRecordsAwaitingApproval.doc(presentYear).get();\n    return doc.exists\n}\n\n\n\n\n\n\n\n\n\n\n\n/////////////  total data records\n\n\nconst recordTotals = fireStore.collection('recordTotals');\n\n\nexport async function updateSalesTotal( increment) {\n    return recordTotals.doc(\"salesAndProductTotals\").update(\"SalesTotal\",firebase.firestore.FieldValue.increment(increment))\n}\n\nexport async function updateProductTotal(increment) {\n    return recordTotals.doc(\"salesAndProductTotals\").update(\"ProductTotal\",firebase.firestore.FieldValue.increment(increment))\n}\n\n// export async function updateProductTotal(increment) {\n//     recordTotals.doc(\"salesAndProductTotals\").update(\"ProductTotal\",Firestore.FieldValue.increment(increment))\n// }\n\nexport async function createProductSalesTotalifNotExist(data) {\n  return recordTotals.doc(\"salesAndProductTotals\").set(data)\n}\n\nexport async function checkIfProductSalesTotalExist() {\n    return  (await recordTotals.doc(\"salesAndProductTotals\").get()).exists\n     \n}\n\n\nexport async function getTotalProductAndSalesStream( salesAndProduct) {\n    recordTotals.doc(\"salesAndProductTotals\").onSnapshot({\n        includeMetadataChanges: true\n    }, (doc) => {\n        if (doc.exists){\n            salesAndProduct(doc.data())\n        }\n    })\n\n}\n\n\n\n\nexport async function getTotalMonthAndDayStream(monthly, daly) {\n    recordTotals.doc(\"monthlyTotals\").onSnapshot({\n        includeMetadataChanges: true\n    }, (doc) => {\n        if (doc.exists){\n            \n            // monthly(doc.data())\n        }\n    })\n\n    recordTotals.doc(\"weeklyTotals\").onSnapshot({\n        includeMetadataChanges: true\n    }, (doc) => {\n        if (doc.exists){\n            // daly(doc.data())\n        }\n    })\n}\n\nexport async function isrecordWeeklyTotalsAvailable() {\n    let doc = await recordTotals.doc(\"weeklyTotals\").get()\n    return doc.exists\n}\n\nexport async function isrecordMonthlyTotalsAvailable() {\n    let doc = await recordTotals.doc(\"monthlyTotals\").get()\n    return doc.exists\n}\n","import defaultModule from './firebaseInitializer'\nimport {getAllUserData} from \"./crudModules\"\n// const fireStore=firebase.firestore(defaultModule);\n\n\nexport async function signupWithEmailAndPassword(email, password){\n   return await defaultModule.auth().createUserWithEmailAndPassword(email, password)\n\n}\n\n\n// .then((user) => {\n//   // Signed in \n//   // ...\n//   loginWithEmailAndPassword(email,password);\n// })\n// .catch((error) => {\n//   var errorCode = error.code;\n//   var errorMessage = error.message;\n//   // ..\n// });\n\n\nexport async function loginWithEmailAndPassword(email, password){\n\n  return await defaultModule.auth().signInWithEmailAndPassword(email,password)\n\n}\n// .then((user) => {\n//   // Signed in \n//   // ...\n// })\n// .catch((error) => {\n//   var errorCode = error.code;\n//   var errorMessage = error.message;\n// });\n\n\nexport async function signoutOfApp(){\n  return await defaultModule.auth().signOut()\n  }\n\n\n  export  function onAutStateChange(logout,login){\n\n    defaultModule.auth().onAuthStateChanged(async function (user) {\n      if (user) {\n       await getAllUserData(user.uid).then(async (data) => {\n        if(data.exists)\n          var userTypeAdmin=  await data.get(\"isUSersAdmin\");\n           login(userTypeAdmin)\n        }\n        )\n      } else {\n        // logout()\n      }\n    });\n  }","import React from 'react'\nimport '../scss/barchart.css'\nimport Card from \"@material-ui/core/Card\"\nimport {getTotalMonthAndDayStream} from '../../controller/crudModules'\n\n\nfunction BarGroup(props) {\n    let barPadding = 5\n    let barColour = '#348AA7'\n    let widthScale = d => d * 1.5\n\n    let width = widthScale(props.d.value)\n    let yMid = props.barHeight * 0.5\n    let xMid = props.barHeight * .7\n\n    return <g className=\"bar-group\">\n        <text className=\"name-label\" x={xMid} y={yMid} alignmentBaseline=\"middle\"\n            transform=\"rotate(90)\">{props.d.name}</text>\n        <rect y={barPadding * 0.5} width={width} height={props.barHeight - barPadding} fill={barColour} />\n        <text className=\"value-label\" x={width - 8} y={yMid} alignmentBaseline=\"middle\"\n        >{props.d.value}</text>\n    </g>\n}\n\n\nexport default class BarChart extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            isbyday: true,\n            byDay: null,\n            byMonth: null,\n        }\n    }\n\n    componentDidMount() {\n        getTotalMonthAndDayStream(this.setMonthlyDataFromStore,this.setDalyDataFromStore);\n        this.setState({ data: this.state.byDay ?? this.byDay, isbyday: true })\n\n    }\n\n\n\n    setDalyDataFromStore = (setbyDays) => {\n        this.setState({ byDay: setbyDays})\n    }\n    setMonthlyDataFromStore = (setbyMonth) => {\n        this.setState({byMonth: setbyMonth })\n    }\n\n    byMonth = [\n        { name: 'Jan', value: 50 },\n        { name: 'Feb', value: 20 },\n        { name: 'Mar', value: 30 },\n        { name: 'Apr', value: 40 },\n        { name: 'May', value: 20 },\n        { name: 'Jun', value: 5 },\n        { name: 'Jul', value: 1 },\n        { name: 'Aug', value: 1 },\n        { name: 'Sep', value: 1 },\n        { name: 'Oct', value: 1 },\n        { name: 'Nov', value: 1 },\n        { name: 'Dec', value: 1 },\n\n    ]\n\n    byDay = [\n        { name: 'Mon', value: 100 },\n        { name: 'Tue', value: 40 },\n        { name: 'Wed', value: 35 },\n        { name: 'Thu', value: 50 },\n        { name: 'Fri', value: 55 },\n        { name: 'Sat', value: 40 },\n        { name: 'Sun', value: 30 },\n    ]\n\n    toggleByDay = () => this.setState({ data: this.state.byDay ?? this.byDay, isbyday: true }, () => console.log(\"byDay\"));\n\n    toggleByMonth = () => this.setState({ data: this.state.byMonth ?? this.byMonth, isbyday: false }, () => console.log(\"byDay\"));\n\n\n    render() {\n        let barHeight = 60\n        let barGroups = this.state.data.map((d, i) => <g key={d.name + i} transform={`translate(0, ${i * barHeight})`}>\n            <BarGroup i={i} d={d} barHeight={barHeight} />\n        </g>)\n\n\n\n\n\n        return <Card className=\"mainCard\">\n\n            <svg className=\"mainChartHeadings\">\n                <g>\n                    <text className=\"title\" x=\"10\" y=\"30\">Week beginning 9th July</text>\n                </g>\n                <g>\n                    <text className=\"byView\" x=\"300\" y=\"30\" style={{ opacity: this.state.isbyday ? .5 : 1 }} onClick={this.toggleByMonth}>This year</text>\n                    <text className=\"byView\" x=\"450\" y=\"30\" style={{ opacity: this.state.isbyday ? 1 : .5 }} onClick={this.toggleByDay}>This week</text>\n\n                </g>\n            </svg>\n\n            <svg className=\"mainChart\" height=\"200\">\n                <g className=\"container\" transform=\"translate(35,150) rotate(-90)\">\n                    {barGroups}\n                </g>\n            </svg>\n        </Card>\n    }\n}\n\n//   ReactDOM.render(\n//     <BarChart />,\n//     document.getElementById('app')\n//   )","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction CircularProgressWithLabel(props) {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"determinate\" {...props} size={120}/>\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" style={{fontSize:20}}  color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nexport default function CircularStatic(props) {\n  const [progress, setProgress] = React.useState(10);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return <CircularProgressWithLabel value={props.progress} />;\n}\n","import React from \"react\"\nimport BarChart from \"./barChart/barchart\"\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from \"./circularProgresschart/circularProgress\"\nimport { getTotalProductAndSalesStream,getAllSalesAwaitingAprovalStream } from \"../controller/crudModules\"\nimport Card from \"@material-ui/core/Card\"\nimport firebase from \"firebase\"\n\nconst useStyles = makeStyles((theme) => ({\n\n  flexMain: {\n    display: \"flex\",\n    flexDirection: \"row\",\n\n  }\n  , FavoriteMain: {\n    teansition: \"500ms ease-in-out\",\n    height: \"82vh\",\n    width: \"30%\",\n    overflow: \"hidden\",\n\n  }, Favheading: {\n    backgroundColor: \"#f5f5f5\",\n    height: \"3vh\",\n    width: \"93.6%\",\n\n  }, FavBody: {\n    marginRight: theme.spacing(3),\n    height: \"80vh\",\n    backgroundColor: \"#f5f5f5\",\n    overflow: \"hidden\",\n    overflowY: \"scroll\"\n  }\n  , GridMain: {\n\n    height: \"80vh\",\n    display: \"grid\",\n    width: \"70%\",\n    gridTemplateColumns: \"100%\",\n    gridTemplateRows: `5% 26% 8% 60%`,\n    gridGap: \"5px\",\n  }\n  , grid1: {\n    fontStyle: \"bold\",\n    gridRow: \"1/2\",\n    gridColumn: \"1/3\",\n    margin: \"0 auto\",\n\n  }\n  , grid3: {\n\n    // backgroundColor: \"#f5f5f5\",\n    gridRow: \"3/4\",\n    gridColumn: \"1/3\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n\n  }, grid4: {\n\n    backgroundColor: \"#f5f5f5\",\n    gridRow: \"4/5\",\n    gridColumn: \"1/3\",\n    padding: theme.spacing(3),\n\n\n    overflow: \"hidden\",\n    overflowY: \"scroll\"\n  }\n  , grid2: {\n    backgroundColor: \"#f5f5f5\",\n    display: \"flex\",\n    width: \"100%\",\n    gridRow: \"2/3\",\n    gridColumn: \"1/3\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    margin: \"0 auto\",\n\n  }, cardflex: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\npadding:\"5px\"\n\n},cardMain:{\n  marginRight: \"5px\",\n  marginLeft: \"5px\",\n  marginTop: \"10px\"\n  }\n\n}));\n\n\n\n\nexport default function Dashbord(props) {\n  const classes = useStyles();\n  const [totalsState, setTotalsState] = React.useState({ productsTotal: 50, totalSales: 30 })\n\n  let presentYear = new Date().getFullYear().toString();\n  const [totalGoodsSend, setTotalGoodsSend] = React.useState({})\n\n  React.useEffect(() => {\n    getTotalProductAndSalesStream(setTotalsStateValue)\n    getAllSalesAwaitingAprovalStream(presentYear, setTotalGoods)\n\n  }, [totalsState,totalGoodsSend])\n\n  function setTotalsStateValue(data) {\n    setTotalsState({ totalSales:data[\"SalesTotal\"], productsTotal: data[\"ProductTotal\"] })\n  }\n\n\n\nfunction setTotalGoods(data) {\n    setTotalGoodsSend(data.data())\n}\n  function DisplayAwaiting({ data, onclick ,month,year}) {\n    const classes = useStyles();\n  \n    return data.map((val, index) =>\n        <Card className={classes.cardMain} >\n            <div className={classes.cardflex}>\n                <div>{manipulateData(val.Date)}</div>\n                <div style={{color:\"green\"}}>Le:{val.Amount}</div>\n  \n            </div>\n        </Card>\n    );\n    \n }\n\n\n function manipulateData(data=\"\") {\n\n  if (data.seconds) {\n      data = new firebase.firestore.Timestamp(data.seconds, data.nanoseconds).toDate();\n  }\n  if (data instanceof Date) {\n      var dd = data.getDate()\n      var mm = data.getMonth()\n      var yyyy = data.getFullYear();\n\n      var min = data.getMinutes();\n      var hou = data.getHours();\n\n      return mm + '/' + dd + '/' + yyyy +\" @ \"+hou+\":\"+min;\n\n  } else {\n      return data;\n  }\n}\n  return (\n    <div className={classes.flexMain}>\n      <div className={`flex ${classes.FavoriteMain}`} style={{ display: props.drawerOpen ? \"none\" : \"block\" }}>\n        <div className={classes.Favheading}>\n          <Typography>latest order</Typography>\n        </div>\n        <div className={classes.FavBody}>\n        {\n                        Object.keys(totalGoodsSend).map((keys, i) => {\n                            return keys === \"years\" ? <div>{totalGoodsSend[keys]}</div> :\n                                <DisplayAwaiting month={keys} year={totalGoodsSend[\"years\"]}data={totalGoodsSend[keys]} />\n                        })\n                    }\n        </div>\n      </div>\n\n      <div className={`flex ${classes.GridMain}`} style={{ width: props.drawerOpen ? \"100%\" : \"70%\" }}>\n        <div className={`grid ${classes.grid1}`}>\n          <Typography>Totals</Typography>\n        </div>\n\n        <div className={`grid ${classes.grid2}`}>\n          <div>\n            <CircularProgress progress={100} />\n            <div>products = {totalsState.productsTotal} </div>\n          </div>\n\n          <div><CircularProgress progress={100 - ((totalsState.totalSales / totalsState.productsTotal) * 100)} />\n            <div>in store={totalsState.productsTotal - totalsState.totalSales}</div>\n\n          </div>\n          <div><CircularProgress progress={(totalsState.totalSales / totalsState.productsTotal) * 100} />\n            <div>sales={totalsState.totalSales}</div>\n\n          </div>\n        </div>\n        <div className={`grid ${classes.grid3}`}>\n          <Typography style={{ fontSize: 20, textTransform: 'capitalize' }} >Welcome to petico car decoration enterprice</Typography>\n        </div>\n        <div className={`grid ${classes.grid4}`}>\n          <BarChart />\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n    margin:8,\n  },\n\n}));\n\nexport default function CustomizedInputBase(props) {\n  const classes=useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <Paper component=\"form\" className={classes.root}>\n      <div>\n      <IconButton className={classes.iconButton} aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>Name</MenuItem>\n        <MenuItem onClick={handleClose}>Supplier Number</MenuItem>\n        <MenuItem onClick={handleClose}>City</MenuItem>\n      </Menu>\n      </div>\n   \n\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search\"\n        inputProps={{ 'aria-label': 'search petico' }}\n      />\n      <IconButton  className={classes.iconButton} aria-label=\"search\" onClick={()=>{}}>\n        <SearchIcon />\n      </IconButton>\n    \n    </Paper>\n  );\n}\n","\nexport default class ZTableUtil {\n    constructor() {\n        this.numberVal = []\n    }\n\n\n    getNumberTotalsFromData = (data) => {\n\n        data.forEach((obj, index) => {\n            Object.values(obj).map((val, i) => {\n                this.checkIfItsNumberVal(val, i, index)\n            })\n        })\n\n        return this.numberVal;\n    }\n\n    checkIfItsNumberVal = (num, colIndex, rowIndex) => {\n\n        let number = parseInt(num);\n        if (Number.isFinite(number) && !number.seconds && number !== isNaN) {\n            this.addToSumVal(number, colIndex)\n\n        } else {\n\n\n            if (rowIndex === 0&&colIndex === 0) {\n                const index = this.numberVal.findIndex((e, i) => parseInt(Object.keys(e)[0]) === colIndex);\n                if (index === -1) {\n                    // this.pushToTotalValState({ [colIndex]: \"-\" })\n                    this.numberVal.push({ [colIndex]: \"Total\" })\n                }\n            }else if (rowIndex === 0){\n                const index = this.numberVal.findIndex((e, i) => parseInt(Object.keys(e)[0]) === colIndex);\n                if (index === -1) {\n                    // this.pushToTotalValState({ [colIndex]: \"-\" })\n                    this.numberVal.push({ [colIndex]: \"-\" })\n                }\n            }\n            // if (rowIndex === 0) {\n            //     const index = this.numberVal.findIndex((e, i) => parseInt(Object.keys(e)[0]) === colIndex);\n            //     if (index === -1) {\n            //         this.numberVal.push({ [colIndex]: \"-\" })\n            //     }\n\n\n\n\n            // }\n        }\n\n    }\n\n\n    addToSumVal = (newval, colIndex) => {\n\n        const index = this.numberVal.findIndex((e, i) => parseInt(Object.keys(e)[0]) === colIndex);\n        if (index === -1) {\n            this.numberVal.push({ [colIndex]: newval });\n        } else {\n\n            const oldVal = Object.values(this.numberVal[index]);\n            if (oldVal !== \"-\") {\n                this.numberVal[index] = { [colIndex]: parseInt(oldVal) + newval }\n            }\n        }\n\n    }\n\n\n\n    orderList = (list, mapOrder) => {\n\n        var newList = [];\n\n        if (mapOrder === null || mapOrder === undefined) {\n            list.forEach((unordered) => {\n                newList.push(Object.keys(unordered).sort().reduce(function (result, key) {\n                    result[key] = unordered[key];\n                    return result;\n                }, {}))\n            })\n        } else {\n            list.forEach((unordered) => {\n                newList.push(Object.keys(unordered).sort(function (x, y) { return mapOrder[x] - mapOrder[y]; }).reduce(function (result, key) {\n                    result[key] = unordered[key];\n                    return result;\n                }, {}))\n            })\n        }\n\n        return newList;\n    }\n\n}\n\n\n\n\n\n\n\n\n\n","export const monthIndex = {\n    January: 0, February: 1, March: 2,\n    April: 3, May: 4, June: 5, July: 6,\n    August: 7, September: 8, October: 9,\n    November: 10, December: 11\n}\n\nexport function printData() {\n    var divToPrint = document.getElementById(\"Ztable\").cloneNode(true);\n\n\n    divToPrint.style.width = \"100vw\"\n    divToPrint.style.textAlign = \"center\";\n    divToPrint.style.verticalAlign = \"middle\";\n    \n    let thead = divToPrint.getElementsByTagName(\"thead\")[0];\n    thead.style.backgroundColor = \"#000\";\n    thead.style.color = \"#fff\";\n\n    let tfoot = divToPrint.getElementsByTagName(\"tfoot\")[0];\n    tfoot.style.backgroundColor = \"#000\";\n    tfoot.style.color = \"#fff\";\n\n    let tbody = divToPrint.getElementsByTagName(\"tbody\")[0];\n    tbody.style.backgroundColor = \"#DCDCDC\";\n    tbody.style.color = \"#000\";\n\n\n    let newWin = window.open(\"\");\n    newWin.document.write(divToPrint.outerHTML);\n    newWin.print();\n    newWin.close();\n}\n\nexport function exportTableToExcel(tableID, filename = ''){\n    var downloadLink;\n    var dataType = 'application/vnd.ms-excel';\n    var tableSelect = document.getElementById(tableID);\n    var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');\n    \n    // Specify file name\n    filename = filename?filename+'.xls':'excel_data.xls';\n    \n    // Create download link element\n    downloadLink = document.createElement(\"a\");\n    \n    document.body.appendChild(downloadLink);\n    \n    if(navigator.msSaveOrOpenBlob){\n        var blob = new Blob(['\\ufeff', tableHTML], {\n            type: dataType\n        });\n        navigator.msSaveOrOpenBlob( blob, filename);\n    }else{\n        // Create a link to the file\n        downloadLink.href = 'data:' + dataType + ', ' + tableHTML;\n    \n        // Setting the file name\n        downloadLink.download = filename;\n        \n        //triggering the function\n        downloadLink.click();\n    }\n}","import React from 'react'\nimport \"../scss/Ztable.css\"\nimport firebase from \"firebase\"\nimport ZTableutil from \"./ZTableUtil\"\nimport {monthIndex } from \"../../utils\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nfunction Table({ data, className, headStyle, headClassName, thStyle, thClassName, tdStyle, tdClassName, mapOrder, withFooter = true, totalFooterVal }) {\n\n    console.log(\"fireing\")\n\n    React.useEffect(() => {\n    }, [])\n\n    let ZtableUtil = new ZTableutil();\n    let sortedData = orderList(data, mapOrder);\n\n    let numberVal = ZtableUtil.getNumberTotalsFromData(sortedData);\n\n\n\n    return (<table className={`Ztable ${className}`} id={\"Ztable\"}>\n        <THead data={sortedData[0]} className={headClassName} headStyle={headStyle}\n            thStyle={thStyle}\n            thClassName={thClassName}\n        />\n        <tbody>\n            {\n\n                sortedData.map((d, i) => {\n\n                    return <TRow rowIndex={i} data={d}\n                        key={i} tdStyle={tdStyle} tdClassName={tdClassName}\n                        withFooter={withFooter} />\n\n                })\n            }\n        </tbody>\n        { withFooter && <TFooter numberVal={numberVal} />}\n    </table>)\n\n}\nconst initialState = {\n    mouseX: null,\n    mouseY: null,\n  };\nfunction TRow(props) {\n\n    const [state, setState] = React.useState(initialState);\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    setState({\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n    });\n  };\n\n  const handleClose = () => {\n    setState(initialState);\n  };\n\n    // you can style the table Columns by the name of  data passed\n    return <tr className={`Zth-tr`}  >\n        {Object.values(props.data).map((data, index) => {\n\n            return <td \n             style={{ ...props.tdStyle }} \n            className={`Ztd ${Object.keys(props.data)[index]} ${props.tdClassName}`} key={index}>{\n\n                manipulateData(data)\n\n            }\n            <Menu\n        keepMounted\n        open={state.mouseY !== null}\n        onClose={handleClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          state.mouseY !== null && state.mouseX !== null\n            ? { top: state.mouseY, left: state.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={handleClose}>Copy</MenuItem>\n        <MenuItem onClick={handleClose}>Print</MenuItem>\n        <MenuItem onClick={handleClose}>Highlight</MenuItem>\n        <MenuItem onClick={handleClose}>Email</MenuItem>\n      </Menu>\n            </td>\n        }\n        )}\n    </tr>\n\n}\n\nfunction THead(props) {\n    // you can style the table Columns by the name of toy data passed\n    return <thead className={`Zthead ${props.headClassName}`} style={{ ...props.headStyle }}>\n        <tr>\n            {Object.keys(props.data).map((data, index) => <th style={{ ...props.thStyle }} className={`Zth ${data} ${props.thClassName}`} key={index}>\n\n\n                {\n\n\n                    manipulateData(data.replace(new RegExp(\"_\", \"g\"),\" \"))\n\n                }\n\n\n            </th>)}\n\n        </tr></thead>\n\n}\n\nfunction TFooter(props) {\n\n    console.log(props.numberVal)\n    return <tfoot>\n        <tr >\n            {props.numberVal.map((data, index) => <td\n                key={index}\n            >\n                {data[index]}\n\n            </td>)}\n        </tr>\n    </tfoot>\n}\n\n\nfunction orderList(list, mapOrder) {\n\n    var newList = [];\n    \n    if (mapOrder === null || mapOrder === undefined) {\n        list.forEach((unordered) => {\n            newList.push(Object.keys(unordered).sort().reduce(function (result, key) {\n                result[key] = unordered[key];\n                return result;\n            }, {}))\n        })\n    } else {\n        \n        list.forEach((unordered) => {\n            newList.push(Object.keys(unordered).sort(function (x, y) { return mapOrder[x] - mapOrder[y]; }).reduce(function (result, key) {\n                result[key] = unordered[key];\n                return result;\n            }, {}))\n        })\n    }\n\n\n    return newList;\n}\n\nfunction manipulateData(data=\"\") {\n\n    if (data.seconds) {\n        data = new firebase.firestore.Timestamp(data.seconds, data.nanoseconds).toDate();\n    }\n    if (data instanceof Date) {\n        var dd = data.getDate()\n        var mm = data.getMonth()\n        var yyyy = data.getFullYear();\n        mm=getKey(mm).substring(0,3)\n        return mm + '/' + dd + '/' + yyyy;\n\n    } else {\n        return data;\n    }\n}\n\n\nfunction getKey(presentMonth) {// refactor needed\n    let month;\n    // Object.keys(monthIndex).find((keys, index) => monthIndex[keys] == presentMonth && keys\n\n    Object.keys(monthIndex).find((keys, index) => {\n        if (monthIndex[keys] == presentMonth\n        ) month = keys;\n    })\n    return month;\n}\n\nexport default React.memo(Table)\n\n\n\n// export default class Table extends React.Component {\n//     constructor(props) {\n//         super(props)\n//         let {\n//             data, className, headStyle, headClassName,\n//             thStyle, thClassName, tdStyle, tdClassName, mapOrder, withFooter\n//         } = props;\n\n//         this.data = data;\n//         this.className = className;\n//         this.headStyle = headStyle;\n//         this.headClassName = headClassName;\n//         this.thStyle = thStyle;\n//         this.thClassName = thClassName;\n//         this.tdStyl = tdStyle;\n//         this.tdClassName = tdClassName;\n//         this.mapOrder = mapOrder;\n//         this.withFooter = withFooter ?? true;\n\n//         this.totalVal = [];\n\n\n//         this.sortedData = this.orderList(data, mapOrder);\n//         console.log(\"fireing\")\n\n//         // this.state={\n//         //   totalVal:[]\n//         // }\n\n//     }\n\n//     componentDidMount(){\n//         this.totalVal = [];\n//     }\n\n// // pushToTotalValState=(newVal)=>{\n// //     this.setState({ totalVal: [...this.state.totalVal, newVal] }) \n// // }\n\n\n// // changeTotalValState=(newVal)=>{\n// //     this.setState({ totalVal: newVal}) \n// // }\n\n//     shouldComponentUpdate(newProps,newState){\n\n//         return newProps.data!==this.props.data\n//     }\n\n//     checkIfItsNumberVal = (num, colIndex, rowIndex) => {\n\n//         let number = parseInt(num);\n//         if (Number.isFinite(number) && !number.seconds && number !== isNaN) {\n\n//             this.addToSumVal(number, colIndex)\n\n//         } else {\n            // if (rowIndex === 0&&colIndex === 0) {\n            //     const index = this.totalVal.findIndex((e, i) => parseInt(Object.keys(e)[0]) === colIndex);\n            //     if (index === -1) {\n            //         // this.pushToTotalValState({ [colIndex]: \"-\" })\n            //         this.totalVal.push({ [colIndex]: \"Total\" })\n            //     }\n            // }else if (rowIndex === 0){\n            //     const index = this.totalVal.findIndex((e, i) => parseInt(Object.keys(e)[0]) === colIndex);\n            //     if (index === -1) {\n            //         // this.pushToTotalValState({ [colIndex]: \"-\" })\n            //         this.totalVal.push({ [colIndex]: \"-\" })\n            //     }\n//             }\n//         }\n\n//     }\n\n\n//     addToSumVal = (newval, colIndex) => {\n\n//         const index = this.totalVal.findIndex((e, i) => parseInt(Object.keys(e)[0]) === colIndex);\n//         if (index === -1) {\n\n//             this.totalVal.push({[colIndex]: newval });\n//         } else {\n//             const oldVal = Object.values(this.totalVal[index]);\n\n//             if (oldVal !== \"-\") {\n//                 this.totalVal[index] ={[colIndex]: parseInt(oldVal) + newval}\n//             }\n//         }\n//     }\n\n\n\n\n//     orderList = (list, mapOrder) => {\n\n//         var newList = [];\n\n//         if (mapOrder === null || mapOrder === undefined) {\n//             list.forEach((unordered) => {\n//                 newList.push(Object.keys(unordered).sort().reduce(function (result, key) {\n//                     result[key] = unordered[key];\n//                     return result;\n//                 }, {}))\n//             })\n//         } else {\n//             list.forEach((unordered) => {\n//                 newList.push(Object.keys(unordered).sort(function (x, y) { return mapOrder[x] - mapOrder[y]; }).reduce(function (result, key) {\n//                     result[key] = unordered[key];\n//                     return result;\n//                 }, {}))\n//             })\n//         }\n\n\n//         return newList;\n//     }\n\n\n\n\n\n\n\n//     render() {\n//         function manipulateData(data) {\n\n//             if (data.seconds) {\n//                 data = new firebase.firestore.Timestamp(data.seconds, data.nanoseconds).toDate();\n//             }\n//             if (data instanceof Date) {\n//                 var dd = data.getDate()\n//                 var mm = data.getMonth()\n//                 var yyyy = data.getFullYear();\n\n//                 return mm + '/' + dd + '/' + yyyy;\n\n//             } else {\n//                 return data;\n//             }\n//         }\n\n\n//         function TRow(props) {\n//             // you can style the table Columns by the name of  data passed\n//             return <tr className={`Zth-tr`}>\n//                 {Object.values(props.data).map((data, index) => {\n\n//                     if (data !== \"\") {\n//                         props.withFooter && props.checkIfItsNumber(data, index, props.rowIndex)\n//                     }\n//                     return <td style={{ ...props.tdStyle }} className={`Ztd ${Object.keys(props.data)[index]} ${props.tdClassName}`} key={index}>{\n\n//                         manipulateData(data)\n\n//                     }</td>\n//                 }\n//                 )}\n//             </tr>\n\n//         }\n\n//         function THead(props) {\n//             // you can style the table Columns by the name of toy data passed\n//             return <thead className={`Zthead ${props.headClassName}`} style={{ ...props.headStyle }}>\n//                 <tr>\n//                     {Object.keys(props.data).map((data, index) => <th style={{ ...props.thStyle }} className={`Zth ${data} ${props.thClassName}`} key={index}>\n\n\n//                         {\n\n//                             // data instanceof Date || data?.nanoseconds!==null || data?.nanoseconds!==undefined ?\n//                             //     manipulateDate(data) :\n//                             //     data !== \" \" && data\n//                             manipulateData(data)\n\n//                         }\n\n\n//                     </th>)}\n\n//                 </tr></thead>\n\n//         }\n\n//         function TFooter(props) {\n//             // var ob={}\n//             // Object.values(ob).length\n//             console.log(props.totalVal)\n//             return <tfoot>\n//                 <tr >\n//                     {props.totalVal?.map((data, index) => <td\n//                         key={index}\n//                     >\n//                         {/* {data[index]!==\"-\"?parseInt(data[index])/2:data[index]} */}\n//                         {data[index]}\n\n//                     </td>)}\n//                 </tr>\n//             </tfoot>\n//         }\n\n\n//         return (<table className={`Ztable ${this.className}`}>\n//             <THead data={this.sortedData[0]} className={this.headClassName} headStyle={this.headStyle}\n//                 thStyle={this.thStyle}\n//                 thClassName={this.thClassName}\n//             />\n//             <tbody>\n//                 {\n\n//                     this.sortedData.map((d, i) => {\n\n//                         return <TRow rowIndex={i} data={d}\n//                             key={i} tdStyle={this.tdStyle} tdClassName={this.tdClassName}\n//                             checkIfItsNumber={this.checkIfItsNumberVal} withFooter={this.withFooter} />\n\n//                     })\n//                 }\n//             </tbody>\n//             { this.withFooter && <TFooter totalVal={this.totalVal} />}\n//         </table>)\n//     }\n\n// }\n\n\n","\nfunction createRipple(event) {\n\nconst button = event.currentTarget;\n\nconst circle = document.createElement(\"span\");\nconst diameter = Math.max(button.clientWidth, button.clientHeight);\nconst radius = diameter / 2;\n\n\ncircle.style.width = circle.style.height = `${diameter}px`;\ncircle.style.left = `${event.clientX - (button.offsetLeft + radius)}px`;\ncircle.style.top = `${event.clientY - (button.offsetTop + radius)}px`;\ncircle.classList.add(\"ripple\"); \n\nconst ripple = button.getElementsByClassName(\"ripple\")[0];\n\nif (ripple) {\n  ripple.remove();\n  ripple.remove();\n}\n\nbutton.appendChild(circle);\n\n}\n\nconst buttons = document.getElementsByClassName(\"zElement-with-ripple\");\n\nexport function startWork(){\n  \n  for (const button of buttons) {\n    button.addEventListener(\"click\", createRipple);\n  }\n}","\nimport React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./utility/zripple.css\"\nimport  {startWork} from  \"./utility/zripple\"\n\n\nconst useStyles = makeStyles((theme) => ({\ncard: {\n        marginTop: \"7px\",\n        cursor: \"pointer\",\n        // background: \"transparent\",\n        boxShadow: \"6px 6px 14px 0 rgba(0, 0, 0, 0.2),-8px -8px 18px 0 rgba(255, 255, 255, 0.55)\",\n        borderRadius: \"40px\",\n        padding: \"10px \",\n        width: \"35px\",\n        height: \"35px\",\n\n        // minHeight: \"35px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1\n        // backgroundColor:\"#ffac28\"\n    }\n\n}));\n\n\nexport default function CircularButton({tip,onClick,Child,style}) {\n    const classes = useStyles();\n    // React.useEffect(()=>{\n    //     startWork();\n    // },[])\n\n    return (\n    <div style={{...style}} className={`zElement-with-ripple ${classes.card}`} title={tip} onClick={onClick}>\n        {<Child className={classes.icon} />}\n    </div>)\n}","export const stockRecordMapOrder = { Date: 1, Description: 2, Quantity: 3, Unit_Cost: 4, Total_Cost: 5 };\n\nexport const paymentsRecordMapOrder = {Date: 1, Supply_Number: 2, City: 3, Deptors_Name: 4, Amount: 5, };\n\n\nexport const saleRecordMapOrder = { Date: 1, Amount: 3, Receiver: 2, };\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nexport default function DatePickers({getDateArray}) {\n    let dateRef=React.useRef()\n  const classes = useStyles();\n  const date=new Date()\n  const defaultVal=date.getFullYear()+\"-\"+(date.getMonth()+1)+\"-\"+date.getDate();\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        inputRef={dateRef}\n        id=\"date\"\n        label=\"get data for\"\n        type=\"date\"\n        defaultValue={defaultVal}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e)=>{getDateArray(e.target.value)}}\n      />\n    </form>\n  );\n}\n\n\n","import React, { useState } from \"react\"\nimport CustomizedInputBase from \"./SearchBar\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Ztable from \"./zTable/Ztable\"\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\"\nimport CircularButton from \"./CircularZButton\"\nimport PrintIcon from '@material-ui/icons/Print';\nimport { paymentsRecordMapOrder } from \"../modules/dataMapOrder\"\nimport { getAllPaymentRecordsByYearStream, updatePaymentRecords, addAllPaymentRecordsRecords, isPaymentRecordDataExist } from '../controller/crudModules'\nimport { useSnackbar } from 'notistack';\nimport { monthIndex } from \"../utils\"\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport DatePicker from \"./DateYearPicker\"\nconst useStyles = makeStyles((theme) => ({\n    floatButton: {\n        position: \"fixed\",\n        bottom: \"100px\",\n        right: \"40px\",\n    },\n    Table: {\n        height: \"50px\",\n        width: \"100%\",\n        backgroundColor: \"#f5f5f5\",\n    }, rootEditText: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    root: {\n\n\n    }, heading: {\n        display: \"flex\",\n        justifyContent: \"center\",\n\n        alignItems: 'center',\n        gridRow: \"1/2\",\n        gridColumn: \"2/3\",\n\n\n    },\n    //     heading: {\n    //         // padding: '2px 4px',\n    //         // alignItems: 'flex-end',\n    //         // gridRow: \"1/2\",\n    //         // gridColumn: \"2/3\",\n    // position:\"absolute\",\n    // right:0,\n\n\n    //     },\n    gridMain: {\n\n        display: \"grid\",\n        gridTemplateRows: \"15% 85%\",\n        gridTemplateColumns: \"65% 35%\",\n        height: \"75vh\",\n        // width:\"70%\",\n        gridGap: \"5px\",\n\n    },\n    payMentList: {\n        overflowY: \"scroll\",\n\n        gridRow: \"1/3\",\n        gridColumn: \"1/2\",\n        width: \"100%\",\n        height: \"100%\",\n    }, addPayment: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gridRow: \"2/3\",\n        gridColumn: \"2/3\",\n        backgroundColor: \"#f5f5f5\",\n    }\n\n}));\n\n\n\n\nexport default function AccountPayment(props) {\n\n    const classes = useStyles();\n    const date = new Date()\n    const defaultVal = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n\n    const { enqueueSnackbar } = useSnackbar();\n\n\n    const handleClickVariant = (message, variant) => {\n        // variant could be success, error, warning, info, or default\n        enqueueSnackbar(message, { variant });\n    };\n\n\n    function getDateAsArray(string) {\n        return string.split(\"-\");\n    }\n\n    const [data, setData] = useState([{ Date: \"\", Deptors_Name: \"\", City: \"\", Supply_Number: \"\", Amount: \"\" }])\n\n    const [dateState, setDate] = useState(getDateAsArray(defaultVal))\n\n\n    function getDate(dateString) {\n        setDate(getDateAsArray(dateString))\n    }\n\n    React.useEffect(() => {\n        getAllPaymentRecordsByYearStream(dateState[0], setAllPayentDataWithFirestore)\n\n    }, [data, dateState])\n\n    function setAllPayentDataWithFirestore(data) {\n        let newdata = data.data()[getDateKey()]\n        if (newdata === null || newdata === undefined) {\n            handleClickVariant(\"no data for \" + getDateKey() + \" /\" + dateState[0], \"error\")\n        } else {\n            setData(newdata)\n        }\n    }\n\n    function getDateKey() {// refactor needed\n        let month;\n        Object.keys(monthIndex).find((keys, index) => {\n            if (monthIndex[keys] == (dateState[1] - 1)\n            ) month = keys;\n            return 0;\n        })\n        return month;\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <DatePicker getDateArray={getDate} />\n            <div className={classes.gridMain}>\n                <div className={classes.heading}><CustomizedInputBase /></div>\n\n                <div className={classes.payMentList}>\n                    <Ztable data={data} className={classes.Table}\n                        thStyle={{ position: \"sticky\", top: 0, zIndex: 0 }}\n                        mapOrder={paymentsRecordMapOrder}\n                        withFooter={false}\n\n                    />\n                </div>\n                <div className={classes.addPayment}>\n                    <div>\n                        <BasicTextFields />\n                    </div>\n                </div>\n            </div>\n            <div className={classes.floatButton}>\n                <CircularButton Child={PrintIcon} tip=\"print all payments\" />\n\n            </div>\n        </div>\n    )\n}\n\n\n\n\n\nfunction BasicTextFields() {\n    const classes = useStyles();\n\n    var supplyNumberRef = React.useRef();\n    var cityRef = React.useRef();\n    var NameRef = React.useRef();\n    var AmountRef = React.useRef();\n\n\n    const { enqueueSnackbar } = useSnackbar();\n\n\n    const handleClickVariant = (message, variant) => {\n        // variant could be success, error, warning, info, or default\n        enqueueSnackbar(message, { variant });\n    };\n\n\n\n    async function onAddButtonclick() {\n\n        let presentYear = new Date().getFullYear().toString();\n        let presentMonth = new Date().getMonth().toString();\n\n\n        var supplyNumberRefValue = supplyNumberRef.current?.value;\n        var cityRefValue = cityRef.current?.value;\n        var NameRefValue = NameRef.current?.value;\n        var AmountRefValue = AmountRef.current?.value;\n\n        if (supplyNumberRefValue &&\n            cityRefValue &&\n            NameRefValue &&\n            AmountRefValue\n        ) {\n\n            let accountPayment = {\n                Date: new Date(),\n                Supply_Number: supplyNumberRefValue,\n                City: cityRefValue,\n                Deptors_Name: NameRefValue,\n                Amount: AmountRefValue,\n            }\n\n\n            try {\n\n                let month = getKey();\n                let dataExist = await isPaymentRecordDataExist(presentYear)\n                if (dataExist) {\n                    updatePaymentRecords(presentYear, month, accountPayment).then((data) => {\n                        handleClickVariant(\"data added\", \"success\")\n                        // addDataToState(stockRecord)\n\n                    }).catch((error) => {\n                        var errorMessage = error.message;\n                        handleClickVariant(errorMessage, \"error\")\n                    })\n\n                } else {\n                    addAllPaymentRecordsRecords(presentYear, {\n                        years: presentYear,\n                        [month]: [accountPayment],\n                    }).then((data) => {\n                        handleClickVariant(\"data added\", \"success\")\n                        // addDataToState(stockRecord)\n\n                    }).catch((error) => {\n                        var errorMessage = error.message;\n                        handleClickVariant(errorMessage, \"error\")\n                    })\n                }\n\n            } catch (error) {\n                var errorMessage = error.message;\n                handleClickVariant(errorMessage, \"error\")\n            }\n\n        } else {\n            handleClickVariant(\"please check fields\", \"error\")\n\n        }\n\n\n\n        supplyNumberRef.current.value = \"\"\n        cityRef.current.value = \"\"\n        NameRef.current.value = \"\"\n        AmountRef.current.value = \"\"\n\n\n        NameRef.current.focus();\n\n        function getKey() {\n            let month;\n            Object.keys(monthIndex).find((keys, index) => {\n                if (monthIndex[keys] == presentMonth\n                ) month = keys;\n                return 0;\n            })\n            return month;\n        }\n\n    }\n\n\n    return (\n        <form className={classes.rootEditText} noValidate autoComplete=\"off\">\n            <TextField\n                inputRef={NameRef}\n                id=\"filled-basic\" label=\"Deptors name\" variant=\"filled\" />\n            <TextField\n                inputRef={cityRef}\n                id=\"filled-basic\" label=\"City\" variant=\"filled\" />\n            <TextField inputRef={supplyNumberRef}\n                id=\"filled-basic\" label=\"Supply Number\" variant=\"filled\" />\n\n            <FormControl variant=\"filled\">\n                <FilledInput\n                    inputRef={AmountRef}\n                    id=\"filled-adornment-weight\"\n                    onChange={() => { }}\n                    endAdornment={<InputAdornment position=\"start\">Le:</InputAdornment>}\n                    aria-describedby=\"filled-weight-helper-text\"\n                    inputProps={{\n                        'aria-label': 'total',\n                    }}\n                />\n                <FormHelperText id=\"filled-weight-helper-text\">Amount</FormHelperText>\n            </FormControl>\n            <Button\n                onClick={onAddButtonclick}\n            >Add</Button>\n        </form>\n    );\n}\n\n","import React from 'react'\n\nexport default function YearlyChecking(){\n\n\n\n    return(\n    <div>\nyearlyCheck\n    </div>)\n}","import React, { useRef } from \"react\"\nimport Divider from '@material-ui/core/Divider'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\"\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Fade from '@material-ui/core/Fade';\n\nimport { signupWithEmailAndPassword } from \"../controller/firebaseAuthentication\"\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useSnackbar } from 'notistack';\nimport {addUsersType} from '../controller/crudModules'\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n\n    }, addButton: {\n        backgroundColor: theme.palette.primary.light,\n        height: \"60px\",\n        float: \"right\"\n    }, main: {\n        width: \"70%\",\n        height: \"80vh\",\n        backgroundColor: \"#f5f5f5\",\n\n    }, rootEditText: {\n        alignItems: \"center\",\n        display: \"flex\",\n        justifyContent: \"center\",\n\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    }, devider: {\n        marginLeft: \"10%\", marginRight: \"10%\", marginTop: \"5%\"\n    }, placeholder: {\n        height: 40,\n    },\n\n}))\n\n\nexport default function Setting() {\n\n    const classes = useStyles();\n    return (<div className={classes.root}>\n        <div className={classes.main}>\n            {/* <AddNewSuppliee /> */}\n            <AddMoreUser />\n        </div>\n    </div>)\n}\n\n\nfunction AddMoreUser() {\n\n\n\n    const { enqueueSnackbar } = useSnackbar();\n\n  \n    const handleClickVariant = (message, variant) => {\n      // variant could be success, error, warning, info, or default\n        enqueueSnackbar(message, { variant });\n    };\n\n    const [loading, setLoading] = React.useState(false);\n\n    const [isAdmin, setIsAdmin] = React.useState(false);\n\n    function toggleIsAdmin(){\n        setIsAdmin(!isAdmin)\n    }\n\n    const handleLoading = (isLoading) => {\n\n        setLoading(isLoading);\n    };\n\n\n    const classes = useStyles();\n    const emailFieldReference = useRef()\n    const passwordFieldReference = useRef()\n    const checkRef=useRef()\n    // const [usersCred,setCred]=React.useState({email:\"\",password:\"\"});\n    var email;\n    var password;\n\n\n\n    return (<div className={classes.addSupply}>\n        <Divider className={classes.devider} />\n        <div>add a supplier</div>\n        <div>\n            <form className={classes.rootEditText} noValidate autoComplete=\"off\">\n                <TextField id=\"filled-basic\"\n                    required={true}\n\n                    inputRef={emailFieldReference}\n                    // onChange={(e) => emali=e.target.value}\n                    label=\"email \" variant=\"filled\" />\n\n                <TextField id=\"filled-basic\"\n                    required={true}\n\n                    inputRef={passwordFieldReference}\n                    // onChange={(e) => password=e.target.value}\n\n                    label=\"password \" variant=\"filled\" />\n                <FormControlLabel\n                inputRef={checkRef}\n                    value={isAdmin}\n                    control={<Checkbox color=\"primary\" onChange={toggleIsAdmin} />}\n                    label = {isAdmin ? \"remove as admin\":\"add as admin\"}\n                    labelPlacement=\"start\"\n                />\n\n\n                <Button className={classes.addButton} onClick={\n                    () => {\n                        handleLoading(true);\n\n                        email = emailFieldReference.current.value.toString();\n                        password = passwordFieldReference.current.value.toString();\n                        signupWithEmailAndPasswordDelegate(\n                            email, password,checkRef.current.value,\n                            handleClickVariant,\n                            handleLoading\n                        );\n                    }\n                }  >Add</Button>\n\n            </form>\n        </div>\n        <CircularProgressModule loading={loading} />\n    </div>\n\n    )\n}\n\n\n\nasync function signupWithEmailAndPasswordDelegate(email, password,isAdmin, handleClickVariant, handleLoading) {\n\nif(isAdmin===\"true\"){\n    isAdmin=true\n}else if(isAdmin===\"false\")\n{\n    isAdmin=false\n}else{\n    isAdmin=isAdmin\n}\n\n    try {\n        await signupWithEmailAndPassword(email, password).then((user) => {\n            // Signed in \n            // ...\n            // loginWithEmailAndPassword(email, password);\n            addUsersType(user.user.uid,{isUSersAdmin:isAdmin})\n            handleClickVariant(\"user added\", \"success\")\n            // handleLoading(false)\n\n        })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                handleClickVariant(`${errorMessage} code:${errorCode}`, \"error\")\n            });\n    } catch (e) {\n        handleClickVariant(`${e}`, \"warning\")\n    }\n    handleLoading(false)\n\n}\n\nfunction CircularProgressModule({ loading }) {\n    const classes = useStyles();\n\n    return (<div className={classes.placeholder}>\n        <Fade\n            in={loading}\n            style={{\n                transitionDelay: loading ? '800ms' : '0ms',\n            }}\n            unmountOnExit\n        >\n            <CircularProgress />\n        </Fade>\n    </div>)\n}","import React from \"react\"\nexport const Datacontext = React.createContext();\nexport const StockRecordContext = React.createContext();\nexport const SalesRecordContext = React.createContext();\n\n","import React from 'react'\nimport { StockRecordContext } from \"../controller/contexts\"\n\nimport { getAllStockRecordsByYear, getAllStockRecordsByYearStream, updateProductTotal, getTotalProductAndSalesStream } from \"../controller/crudModules\"\n\n\nexport default class StockRecordsProvider extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            presentYear: this.presentYear,\n            presentMonth: this.presentMonth,\n            allYearData: [],\n            selecteYearData: {},\n            selectedMonthData: [],\n            productTotal: 0\n        }\n\n    }\n\n    componentDidMount() {\n\n        this.loadFromFirestore(this.presentYear);\n\n    }\n\n\n    // load presentYearDataFirst \n\n    // on select setSelectedYear load selected into allYears ans set selected year data to the newly selected year\n\n\n\n    presentYear = new Date().getFullYear().toString();\n    presentMonth = new Date().getMonth().toString();\n\n    loadFromFirestore = async (Year) => {\n\n        //    var listOfData= await getAllStockRecordsByYear(this.presentYear)\n        //     this.setState({selecteYearData: listOfData})\n\n        getAllStockRecordsByYearStream(this.presentYear, this.setData);\n\n        getTotalProductAndSalesStream(this.setProductTotal)\n    }\n\n    setProductTotal = (total) => {\n        this.setState({ productTotal: total[\"ProductTotal\"] })\n    }\n    setData = (data) => {\n        this.setState({ selecteYearData: data.data() })\n    }\n\n    setSelectedYear = (Year) => {\n        //load data from firestore\n    }\n\n    render() {\n\n\n\n        return (<StockRecordContext.Provider\n            value={{\n                state: this.state,\n                selecteYearData: this.state.selecteYearData,\n                productTotal: this.state.productTotal\n            }}>\n            {\n                this.props.children\n            }\n        </StockRecordContext.Provider>\n        )\n    }\n}\nconst StockRecordsConsumer = StockRecordContext.Consumer\n\nexport { StockRecordsProvider, StockRecordsConsumer }","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport StorageIcon from '@material-ui/icons/Storage';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport {printData,exportTableToExcel} from \"../utils\"\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: '1px solid #d3d4d5',\n    },\n})((props) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n}))(MenuItem);\n\nexport default function CustomizedMenus(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <div onClick={handleClick}>\n                {props.children}\n            </div>\n            <StyledMenu\n                id=\"customized-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <StyledMenuItem onClick={printData}>\n                    <ListItemIcon>\n                        <DescriptionIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Pdf\" />\n                </StyledMenuItem>\n                <StyledMenuItem onClick={()=>exportTableToExcel(\"Ztable\")}>\n                    <ListItemIcon>\n                        <StorageIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Excel\" />\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>\n    );\n}\n","import React from \"react\"\nimport { Datacontext } from \"./contexts\"\n\n\nclass DataContextProvider extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expandAll: false,\n        \n        }\n    }\n\n    toggleExpandAll = () => this.setState({ expandAll: !this.state.expandAll })\n      \n    render() {\n        return (\n        \n        <Datacontext.Provider\n            value={{\n\n                state: this.state,\n                toggleExpandAll:this.toggleExpandAll\n            }}>\n\n            {this.props.children}\n        </Datacontext.Provider>)\n    }\n}\n\n\nconst DataContextConsumer = Datacontext.Consumer;\nexport { DataContextConsumer, DataContextProvider }","import React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PlusOne from '@material-ui/icons/Add';\n\nimport PrintBy from \"./printMethod\"\nimport {DataContextConsumer} from '../controller/DataContext'\nimport CircularButton from \"./CircularZButton\"\nimport {printData,exportTableToExcel} from \"../utils\"\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: \"fixed\",\n        bottom: \"150px\",\n        right: \"40px\",\n        width: \"50px\",\n        height: \"70px\",\n        // backgroundColor: \"#000000\"\n    }, card: {\n        marginTop: \"7px\",\n        cursor: \"pointer\",\n        // background: \"transparent\",\n        boxShadow: \"6px 6px 14px 0 rgba(0, 0, 0, 0.2),-8px -8px 18px 0 rgba(255, 255, 255, 0.55)\",\n        borderRadius: \"40px\",\n        padding: \"10px \",\n        width: \"35px\",\n        height: \"35px\",\n\n        // minHeight: \"35px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1\n        // backgroundColor:\"#ffac28\"\n    }, icon: {\n        color: \"#000000\",\n\n    }\n\n\n}));\nexport default function FlaotingActionColumnButtons(props) {\n    const classes = useStyles();\nlet displayEdit=props.displayEdit??true\n    return (\n    \n        <DataContextConsumer>\n        {\n            (value)=> \n      <div className={classes.root}>\n         <CircularButton  style={{display:displayEdit?\"flex\":\"none\"}} tip={\"add more data\"} onClick={props.onClickAdd}  Child={PlusOne} />\n      \n        <PrintBy ><CircularButton tip={\"print your data\"} Child={PrintIcon}  /></PrintBy> \n\n        <CircularButton tip={value.state.expandAll?\"collaps all data\":\"expand all data\"\n    } Child={value.state.expandAll?ExpandMoreIcon:ExpandLessIcon}\n     onClick={value.toggleExpandAll} />\n        </div>}\n        </DataContextConsumer>)\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fade from '@material-ui/core/Fade';\n\nexport default function FadeMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\nvar year=new Date().getFullYear()\nconst[presentYear,setPresentYear]=React.useState(year)\n\nfunction setNewPresentYear(newPresentYear){\n  setPresentYear(newPresentYear);\n  setAnchorEl(null);\n}\n\n\n\n  return (\n    <div style={{width:\"50px\"}}>\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n       {presentYear}\n      </Button>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n      >\n{       props.years.map((data,i)=> <MenuItem onClick={()=>setNewPresentYear(data)} key={i}>{data}</MenuItem>)\n}        \n      </Menu>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { DataContextConsumer } from '../controller/DataContext'\n\nimport ZTable from \"./zTable/Ztable\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: \"10px\",\n        width: '90%',\n\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    }, Container: {\n        display: \"block\"\n    }, AccordionMain: {\n        // backgroundColor:\"#18cc48\"\n\n    }, Table: {\n        width: \"100%\",\n        height: \"100%\",\n    }, secondaryHeading: {\n        right: \"10%\",\n        position: \"absolute\",\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function SimpleAccordion(props) {\n    let isAwaiting=props.isAwaiting??false;\n\n    const classes = useStyles();\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel, closeall, isallOpen) => {\n        if (isallOpen) {\n            closeall();\n            setExpanded(false);\n        } else {\n            setExpanded(panel);\n        }\n    };\n    // style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n    return (\n        <DataContextConsumer>\n            {\n                (value) => <div className={classes.root} >\n                    <Accordion elevation={1}\n                        className={classes.AccordionMain}\n                        expanded={value.state.expandAll ? true : expanded}\n                        onChange={() => handleChange(!expanded, value.toggleExpandAll, value.state.expandAll)}\n                        style={{ color:isAwaiting&&\"#ff0000\"}}>\n                        <AccordionSummary\n\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel2a-content\"\n                            id=\"panel2a-header\"\n                        >\n\n                            <Typography className={classes.heading}>{props.month}</Typography>\n                            {!expanded && <Typography className={classes.secondaryHeading}\n                            style={{color:isAwaiting&&\"#ff0000\" }}>{isAwaiting?\"awaiting\":\"I am an accordion\"}</Typography>}\n\n                        </AccordionSummary>\n                        <AccordionDetails className={classes.Container} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} >\n                        <ZTable data={props.Data} withBorder={false} className={classes.Table} mapOrder={props.mapOrder}  totalFooterVal={[]}  />      \n                        </AccordionDetails>\n                    </Accordion>\n\n                </div>\n            }\n        </DataContextConsumer>\n    );\n}\n\n\n\n\n//  function MinimizeTable(props) {\n\n//     const classes = useStyles();\n\n\n//     // <ZTable data={data} withBorder={false} />\n//     return (\n//         <div>\n//             <SimpleAccordion monthOrDay={props.month} isMain={true}>\n\n//             </SimpleAccordion>\n//         </div>\n//     );\n// }\n","import React from 'react'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FloatingActions from './floatingActions'\nimport YearSelector from './selectDataByYear'\nimport MinimizerWithZTable from \"./miniMizerWithTable\"\n\nimport { DataContextProvider } from '../controller/DataContext'\n\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    }, total: {\n        textAlign: \"center\",\n        margin: \"10px\",\n        fontSize: \"30px\",\n\n    }, main: {\n        // backgroundColor: \"#f5f5f5\",\n\n    }, dialog: {\n\n    }, dialogContent: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // '& > *': {\n        // margin: theme.spacing(1),\n        width: `${100 - theme.spacing(1)}%`,\n        height: \"100%\"\n        // },\n    }, addButton: {\n        backgroundColor: theme.palette.primary.light,\n        height: \"60px\",\n        float: \"right\"\n    }\n}));\n\nexport default function DiaplayDataAndTotals({ data, total, DialogChild, dialogTitle, mapOrder,displayEdit ,awaitingData }) {\n\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n\n    const [load, setLoad] = React.useState(false);\n    function toggle() {\n        setLoad(!load);\n    }\n    React.useEffect((oldProps, newProps) => { if (data !== null || data !== undefined) toggle() }, []);\n    //in a map\n\n    return (\n        <div className={classes.main}>\n            <DataContextProvider>\n                {load ?\n                    <div style={{ height: 400, width: '90%' }}>\n                        <YearSelector years={[\"2020\", \"2021\", \"2022\"]} />\n\n                        {\n                            \n                            data !== undefined &&Object.keys(data).map((Data, index) => Data.toString() !== \"years\" && <MinimizerWithZTable key={index} month={Data.toString()} Data={data[Data]} mapOrder={mapOrder} />)\n                        }\n                        {\n                            awaitingData !==undefined && Object.keys(awaitingData)?.map((Data, index) => Data.toString() !== \"years\" && <MinimizerWithZTable key={index} month={Data.toString()} Data={awaitingData[Data]} mapOrder={mapOrder} isAwaiting={true}/>)\n                        }\n                        <div className={classes.total}>total:le {total??0}</div>\n                        <FloatingActions onClickAdd={handleClickOpen} displayEdit={displayEdit} />\n\n                        <Dialog\n                            fullScreen\n                            // className={classes.dialog}\n                            open={open}\n                            TransitionComponent={Transition}\n                            keepMounted\n                            onClose={handleClose}\n                            aria-labelledby=\"alert-dialog-slide-title\"\n                            aria-describedby=\"alert-dialog-slide-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-slide-title\">{dialogTitle}</DialogTitle>\n                            <DialogContent className={classes.dialogContent}>\n                                <DialogChild />\n\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleClose} color=\"primary\" >\n                                    cancle\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n\n\n                    </div> :\n                    <Backdrop className={classes.backdrop} open={!load} onClick={() => { }}>\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n\n                }\n\n            </DataContextProvider>\n        </div>\n    );\n}\n\n\n","import React, { useRef } from 'react';\nimport { StockRecordsProvider, StockRecordsConsumer } from \"../modules/StockRecordsDataContext\"\nimport { useSnackbar } from 'notistack';\nimport ZTable from \"./zTable/Ztable\"\nimport DiaplayDataAndTotals from \"./DisplayDataAndTotal\"\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport { monthIndex } from \"../utils\"\nimport {\n    checkIfProductSalesTotalExist,\n    updateProductTotal,createProductSalesTotalifNotExist,\n\n    updateStockRecords,\n     addStockRecords, isStockRecordDataExist } from \"../controller/crudModules\"\nimport { stockRecordMapOrder } from '../modules/dataMapOrder';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    addButton: {\n        backgroundColor: theme.palette.primary.light,\n        height: \"60px\",\n        float: \"right\"\n    }, newlyAddedRecords: {\n        backgroundColor: \"#f5f5f5\",\n        width: \"100%\",\n        minHeight: \"75%\",\n        maxHeight: \"90%\"\n\n    }, rootEditText: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    }, dialogMain: {\n        width: \"100%\",\n        height: \"100%\",\n\n    }, Table: {\n        height: \"50px\",\n        width: \"100%\",\n        backgroundColor: \"#f5f5f5\",\n    },\n}));\n\n\n\n\n\nexport default function StockRecord({displayEdit}) {\n\n\n    return (\n        <StockRecordsProvider>\n            <StockRecordsConsumer>\n\n                {\n                    (value) => {\n                        return <DiaplayDataAndTotals \n                        total={value.productTotal}\n                        mapOrder={stockRecordMapOrder}\n                         displayEdit={displayEdit}\n                        data={value.selecteYearData} dialogTitle={\"add more Stock to store\"}\n                            DialogChild={AddStockRecorsPage} />\n                    }\n                }\n            </StockRecordsConsumer>\n        </StockRecordsProvider>\n\n    );\n}\n\n\nfunction AddStockRecorsPage(props) {\n    const classes = useStyles();\n    const descriptionRef = useRef()\n    const quantityRef = useRef()\n    const unitCostRef = useRef()\n    const totalCostRef = useRef()\n\n    let presentYear = new Date().getFullYear().toString();\n    let presentMonth = new Date().getMonth().toString();\n\n    const { enqueueSnackbar } = useSnackbar();\n\n\n    const handleClickVariant = (message, variant) => {\n        // variant could be success, error, warning, info, or default\n        enqueueSnackbar(message, { variant });\n    };\n\n\n    const [stkdata, setData] = React.useState([{\n        Date: \"\",\n        Description: \"\",\n        Quantity: \"\",\n        Unit_Cost: \"\",\n        Total_Unit_Cost: \"\",\n    }])\n\n    function addDataToState(data) {\n\n        setData(old => [...old, data]);\n\n    }\n\n\n    async function onAddButtonclick() {\n\n        var description = descriptionRef.current?.value;\n        var quantity = quantityRef.current?.value;\n        var unitCost = unitCostRef.current?.value;\n        var TotalCost = totalCostRef.current?.value;\n\n        if (description &&\n            quantity &&\n            unitCost &&\n            TotalCost\n        ) {\n\n            let stockRecord = {\n                Date: new Date(),\n                Description: description,\n                Quantity: quantity,\n                Unit_Cost: unitCost,\n                Total_Cost: unitCost * quantity,\n            }\n\n\n            try {\n\n                let month = getKey();\n                \n                let dataExist = await isStockRecordDataExist(presentYear)//todo refactor needed\n                if (dataExist) {\n                    updateStockRecords(presentYear, month, stockRecord).then(async (data) => {\n\n                        let totalsExist=await checkIfProductSalesTotalExist()\n                        if(totalsExist){\n                          await updateProductTotal(unitCost * quantity).then(()=>{\n                            handleClickVariant(\"data added\", \"success\")\n                            addDataToState(stockRecord)\n\n                          })\n\n                        }else{\n                            console.log(\"still creating\" +totalsExist)\n\n                            createProductSalesTotalifNotExist({ProductTotal:(unitCost * quantity)}).then(()=>{\n                                handleClickVariant(\"data added\", \"success\")\n                                addDataToState(stockRecord)\n\n                            })\n                        }\n\n                    }).catch((error) => {\n                        var errorCode = error.code;\n                        var errorMessage = error.message;\n                        handleClickVariant(errorMessage, \"error\")\n                    })\n\n                } else {\n                    addStockRecords(presentYear, {\n                        years: presentYear,\n                        [month]: [stockRecord],\n                    }).then(async(data) => {\n\n                        let totalsExist=await checkIfProductSalesTotalExist()\n                        if(totalsExist){\n                          await updateProductTotal(unitCost * quantity).then(()=>{\n                            handleClickVariant(\"data added\", \"success\")\n                            addDataToState(stockRecord)\n\n                          })\n\n                        }else{\n                            console.log(\"still creating\" +totalsExist)\n                            createProductSalesTotalifNotExist({ProductTotal:(unitCost * quantity)}).then(()=>{\n                                handleClickVariant(\"data added\", \"success\")\n                                addDataToState(stockRecord)\n\n                            })\n                        }\n                    \n\n                    }).catch((error) => {\n                        var errorCode = error.code;\n                        var errorMessage = error.message;\n                        handleClickVariant(errorMessage, \"error\")\n                    })\n                }\n\n            } catch (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                handleClickVariant(errorMessage, \"error\")\n            }\n\n        } else {\n            handleClickVariant(\"please check fields\", \"error\")\n\n        }\n\n\n\n        descriptionRef.current.value = \"\"\n        quantityRef.current.value = \"\"\n        unitCostRef.current.value = \"\"\n        totalCostRef.current.value = \"\"\n\n\n        descriptionRef.current.focus();\n\n        function getKey() {\n            let month;\n            // Object.keys(monthIndex).find((keys, index) => monthIndex[keys] == presentMonth && keys\n\n            Object.keys(monthIndex).find((keys, index) => {\n                if (monthIndex[keys] == presentMonth\n                ) month = keys;\n            })\n            return month;\n        }\n\n    }\n\n    // this determins how the data can be arranged on the table\n\n    return (\n        <div className={classes.dialogMain}>\n            <div className={classes.newlyAddedRecords}>\n                <ZTable data={stkdata} className={classes.Table}\n                    thStyle={{\n                        position: \"sticky\", top: 0, zIndex: 0,\n\n                    }}\n                    tdStyle={{\n                        textAlign: \"center\",\n                        verticalAlign: \"middle\",\n                    }}\n                    mapOrder={stockRecordMapOrder}\n                    withFooter={false}\n                />\n            </div>\n            <form className={classes.rootEditText} noValidate autoComplete=\"off\">\n                <TextField inputRef={descriptionRef} id=\"filled-basic\" label=\"description\" variant=\"filled\" />\n                <TextField inputRef={quantityRef} type=\"number\" id=\"filled-basic\" label=\"quantity\" variant=\"filled\"\n                    onChange={(e) => {\n                        if (unitCostRef.current.value) {\n                            totalCostRef.current.value = unitCostRef.current.value * e.target.value\n                        }\n                    }}\n                />\n                <TextField inputRef={unitCostRef}\n                    onChange={(e) => {\n                        if (quantityRef.current.value) {\n                            totalCostRef.current.value = quantityRef.current.value * e.target.value\n                        }\n                    }}\n                    type=\"number\" id=\"filled-basic\" label=\"unitCost\" variant=\"filled\" />\n\n\n                {/* <TextField  type=\"number\" id=\"filled-basic\" label=\"totalUnitCost\" variant=\"filled\" /> */}\n\n                <FormControl variant=\"filled\">\n                    <FilledInput\n                        inputRef={totalCostRef}\n                        id=\"filled-adornment-weight\"\n                        // value={values.weight}\n                        disabled\n                        onChange={() => { }}\n                        endAdornment={<InputAdornment position=\"start\">Le:</InputAdornment>}\n                        aria-describedby=\"filled-weight-helper-text\"\n                        inputProps={{\n                            'aria-label': 'total',\n                        }}\n                    />\n                    <FormHelperText id=\"filled-weight-helper-text\">Total</FormHelperText>\n                </FormControl>\n\n\n                <Button className={classes.addButton}\n                    onClick={onAddButtonclick}\n                >Add</Button>\n            </form>\n        </div>\n    );\n}\n\n\n","import React from 'react'\nimport { SalesRecordContext } from \"../controller/contexts\"\nimport { SalesData, years } from \"./fakeData\"\nimport { getAllSalesRecordsByYearStream,getAllSalesAwaitingAprovalStream,getTotalProductAndSalesStream } from \"../controller/crudModules\"\n\nexport default class SalesRecordsProvider extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            presentYear: this.presentYear,\n            presentMonth: this.presentMonth,\n            allYearData: [],\n            selecteYearData: {},\n            selectedMonthData: [],\n            awaitingAproval:{},\n            salesTotal:0\n        }\n\n    }\n\n    componentDidMount() {\n\n        getAllSalesAwaitingAprovalStream(this.presentYear,this.setawaitingData)\n\n        getAllSalesRecordsByYearStream(this.presentYear, this.setData)\n\n        getTotalProductAndSalesStream(this.setSalesTotal)\n    }\n\n    setSalesTotal = (total) => {\n        this.setState({ salesTotal: total[\"SalesTotal\"] })\n    }\n\n\n\n      setawaitingData = (data) => {\n    this.setState({ awaitingAproval: data.data() })\n       }\n\n\n    presentYear = new Date().getFullYear().toString();\n    presentMonth = new Date().getMonth().toString();\n\n\n\n    setData = (data) => {\n        this.setState({ selecteYearData: data.data() })\n    }\n\n    setSelectedYear = (Year) => {\n        this.setState({ presentYear: Year})\n    }\n\n    render() {\n\n        return (<SalesRecordContext.Provider\n            value={{\n                selecteYearData: this.state.selecteYearData,\n                awaitingAproval: this.state.awaitingAproval,\n                salesTotal:this.state.salesTotal\n\n            }}>\n            {\n                this.props.children\n            }\n        </SalesRecordContext.Provider>\n        )\n    }\n}\nconst SalesRecordsConsumer = SalesRecordContext.Consumer\n\nexport { SalesRecordsProvider, SalesRecordsConsumer }","import React ,{useRef} from 'react';\nimport { SalesRecordsProvider, SalesRecordsConsumer } from \"../modules/SalesRecordContext\"\n\nimport DiaplayDataAndTotals from \"./DisplayDataAndTotal\"\nimport TextField from '@material-ui/core/TextField';\nimport { saleRecordMapOrder } from '../modules/dataMapOrder';\nimport { useSnackbar } from 'notistack';\nimport ZTable from \"./zTable/Ztable\"\nimport { monthIndex } from \"../utils\"\n\nimport { updateSalesAwaitingAproval, addAllSalesAwaitingAproval, isSalesAwaitingAproval } from \"../controller/crudModules\"\n\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n\n    addButton: {\n        backgroundColor: theme.palette.primary.light,\n        height: \"60px\",\n        float: \"right\"\n    }, newlyAddedRecords: {\n        backgroundColor: \"#f5f5f5\",\n        width: \"100%\",\n        minHeight:\"75%\",\n        maxHeight: \"90%\"\n\n    }, rootEditText: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },dialogMain:{\n        width: \"100%\",\nheight:\"100%\",\n\n    }, Table: {\n        height: \"50px\",\n        width: \"100%\",\n        backgroundColor: \"#f5f5f5\",\n    },\n}));\n\n\n\n\n\nexport default function StockRecord() {\n\n\n    return (\n        <SalesRecordsProvider>\n            <SalesRecordsConsumer>\n\n                {\n                    (value) => {\n                        return <DiaplayDataAndTotals\n                        total={value.salesTotal}\n                        awaitingData={value.awaitingAproval}\n                        data={value.selecteYearData} DialogChild={AddsalesRecordPage} \n                        dialogTitle={\"add more Stock to store\"} mapOrder={saleRecordMapOrder} />\n                    }\n                }\n            </SalesRecordsConsumer>\n        </SalesRecordsProvider>\n\n    );\n}\n\n\n\n\n\n\nfunction AddsalesRecordPage(props) {\n    const classes = useStyles();\n\n    const amountEditText = useRef()\n    const receiversEditText = useRef()\n\n    let presentYear = new Date().getFullYear().toString();\n    let presentMonth = new Date().getMonth().toString();\n\n    const { enqueueSnackbar } = useSnackbar();\n\n\n    const handleClickVariant = (message, variant) => {\n        // variant could be success, error, warning, info, or default\n        enqueueSnackbar(message, { variant });\n    };\n\n\n    const [salesdata, setData] = React.useState([{\n        Date: \"\",\n        Receiver: \"\",\n        Amount: \"\",\n\n    }])\n\n    function addDataToState(data) {\n        setData(old => [...old, data]);\n    }\n\n\n    async function onAddButtonclick() {\n\n        let amountEdit = amountEditText.current?.value;\n        let receiversEdit = receiversEditText.current?.value;\n     \n\n        if (receiversEdit &&\n            amountEdit \n        ) {\n\n            let salesRecord = {\n                Date: new Date(),\n                Receiver: receiversEdit,\n                Amount: amountEdit,\n              \n            }\n\n\n            try {\n\n                let month = getKey();\n                console.log(month)\n                let dataExist = await isSalesAwaitingAproval(presentYear)\n                if (dataExist) {\n                    updateSalesAwaitingAproval(presentYear, month, salesRecord).then((data) => {\n                        handleClickVariant(\"data added\", \"success\")\n                        addDataToState(salesRecord)\n\n                    }).catch((error) => {\n                        var errorCode = error.code;\n                        var errorMessage = error.message;\n                        handleClickVariant(errorMessage, \"error\")\n                    })\n\n                } else {\n                    addAllSalesAwaitingAproval(presentYear, {\n                        years: presentYear,\n                        [month]: [salesRecord],\n                    }).then((data) => {\n                        handleClickVariant(\"data added\", \"success\")\n                        addDataToState(salesRecord)\n\n                    }).catch((error) => {\n                        var errorCode = error.code;\n                        var errorMessage = error.message;\n                        handleClickVariant(errorMessage, \"error\")\n                    })\n                }\n\n            } catch (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                handleClickVariant(errorMessage, \"error\")\n            }\n\n        } else {\n            handleClickVariant(\"please check fields\", \"error\")\n\n        }\n\n\n      amountEditText.current.value=\"\"\n      receiversEditText.current.value=\"\"\n\n    \n      receiversEditText.current.focus();\n\n        function getKey() {\n            let month;\n            // Object.keys(monthIndex).find((keys, index) => monthIndex[keys] == presentMonth && keys\n\n            Object.keys(monthIndex).find((keys, index) => {\n                if (monthIndex[keys] == presentMonth\n                ) month = keys;\n            })\n            return month;\n        }\n\n\n    }\n\n\n\n\n\n    return (\n        <div className={classes.dialogMain}>\n            <div className={classes.newlyAddedRecords}>\n            <ZTable data={salesdata} className={classes.Table}\n                    thStyle={{\n                        position: \"sticky\", top: 0, zIndex: 0,\n\n                    }}\n                    tdStyle={{\n                        textAlign: \"center\",\n                        verticalAlign: \"middle\",\n                    }}\n                    mapOrder={saleRecordMapOrder}\n                    withFooter={false}\n                    totalFooterVal={[]}\n\n                />\n            </div>\n            <form className={classes.rootEditText} noValidate autoComplete=\"off\">\n                <TextField id=\"filled-basic\" inputRef={receiversEditText} label=\"Receiver name\" variant=\"filled\" />\n                <FormControl variant=\"filled\">\n                    <FilledInput\n                        inputRef={amountEditText}\n                        id=\"filled-adornment-weight\"\n                        \n                        onChange={() => { }}\n                        endAdornment={<InputAdornment position=\"start\">Le:</InputAdornment>}\n                        aria-describedby=\"filled-weight-helper-text\"\n                        inputProps={{\n                            'aria-label': 'total',\n                        }}\n                    />\n                    <FormHelperText id=\"filled-weight-helper-text\">Amount</FormHelperText>\n                </FormControl>\n                <Button className={classes.addButton}\n                onClick={onAddButtonclick}\n                >Add</Button>\n            </form>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n// async function onAddButtonclick() {\n\n//         let amountEdit = amountEditText.current?.value;\n//         let receiversEdit = receiversEditText.current?.value;\n     \n\n//         if (receiversEdit &&\n//             amountEdit \n//         ) {\n\n//             let salesRecord = {\n//                 Date: new Date(),\n//                 Receiver: receiversEdit,\n//                 Amount: amountEdit,\n              \n//             }\n\n\n            // try {\n\n            //     let month = getKey();\n            //     console.log(month)\n            //     let dataExist = await isSalesRecordDataExist(presentYear)\n            //     if (dataExist) {\n            //         updateSalesRecords(presentYear, month, salesRecord).then((data) => {\n            //             handleClickVariant(\"data added\", \"success\")\n            //             addDataToState(salesRecord)\n\n            //         }).catch((error) => {\n            //             var errorCode = error.code;\n            //             var errorMessage = error.message;\n            //             handleClickVariant(errorMessage, \"error\")\n            //         })\n\n            //     } else {\n            //         addSalesRecords(presentYear, {\n            //             years: presentYear,\n            //             [month]: [salesRecord],\n            //         }).then((data) => {\n            //             handleClickVariant(\"data added\", \"success\")\n            //             addDataToState(salesRecord)\n\n            //         }).catch((error) => {\n            //             var errorCode = error.code;\n            //             var errorMessage = error.message;\n            //             handleClickVariant(errorMessage, \"error\")\n            //         })\n            //     }\n\n            // } catch (error) {\n            //     var errorCode = error.code;\n            //     var errorMessage = error.message;\n            //     handleClickVariant(errorMessage, \"error\")\n            // }\n\n//         } else {\n//             handleClickVariant(\"please check fields\", \"error\")\n\n//         }\n\n\n//       amountEditText.current.value=\"\"\n//       receiversEditText.current.value=\"\"\n\n    \n//       receiversEditText.current.focus();\n\n//         function getKey() {\n//             let month;\n//             // Object.keys(monthIndex).find((keys, index) => monthIndex[keys] == presentMonth && keys\n\n//             Object.keys(monthIndex).find((keys, index) => {\n//                 if (monthIndex[keys] == presentMonth\n//                 ) month = keys;\n//             })\n//             return month;\n//         }\n\n\n//     }\n","import React from \"react\"\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateSalesTotal, updateSalesRecords, isSalesRecordDataExist, getAllSalesAwaitingAprovalStream, deleteSalesAwaitingAproval, addSalesRecords } from \"../../controller/crudModules\"\nimport Card from \"@material-ui/core/Card\"\nimport firebase from \"firebase\"\nimport Button from \"@material-ui/core/Button\"\nimport { useSnackbar } from 'notistack';\nimport CircularProgressBar from \"@material-ui/core/CircularProgress\"\nconst useStyles = makeStyles((theme) => ({\n\n    flexMain: {\n        display: \"flex\",\n        flexDirection: \"row\",\n\n    }\n    , FavoriteMain: {\n        teansition: \"500ms ease-in-out\",\n        height: \"82vh\",\n        width: \"40%\",\n        overflow: \"hidden\",\n\n    }, Favheading: {\n        backgroundColor: \"#f5f5f5\",\n        height: \"3vh\",\n        width: \"93.6%\",\n\n    }, FavBody: {\n        marginRight: theme.spacing(3),\n        height: \"80vh\",\n        backgroundColor: \"#f5f5f5\",\n        overflow: \"hidden\",\n        overflowY: \"scroll\"\n    }\n    , GridMain: {\n\n        height: \"80vh\",\n        display: \"grid\",\n        width: \"60%\",\n        gridTemplateColumns: \"100%\",\n        gridTemplateRows: `5% 36% 8% 50%`,\n        gridGap: \"5px\",\n    }\n    , grid1: {\n        fontStyle: \"bold\",\n        gridRow: \"1/2\",\n        gridColumn: \"1/3\",\n        margin: \"0 auto\",\n\n    }\n    , grid3: {\n\n        // backgroundColor: \"#f5f5f5\",\n        gridRow: \"3/4\",\n        gridColumn: \"1/3\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n\n    }, grid4: {\n\n        backgroundColor: \"#f5f5f5\",\n        gridRow: \"4/5\",\n        gridColumn: \"1/3\",\n        padding: theme.spacing(3),\n\n\n        overflow: \"hidden\",\n        overflowY: \"scroll\"\n    }\n    , grid2: {\n        backgroundColor: \"#f5f5f5\",\n        display: \"flex\",\n        width: \"100%\",\n        gridRow: \"2/3\",\n        gridColumn: \"1/3\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        margin: \"0 auto\",\n\n    }, cardMain: {\n        marginRight: \"5px\",\n        marginLeft: \"5px\",\n        marginTop: \"10px\"\n        ,\n        cursor: \"pointer\"\n    }\n    , cardflex: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"5px\"\n\n    }, btnFlx: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignSelf: \"bottom\"\n    }, approvedBtn: {\n        backgroundColor: \"#00ff00\",\n        marginRight: \"20px\",\n        marginLeft: \"20px\",\n        marginTop: \"15px\"\n\n    },\n    declineBtn: {\n        marginTop: \"15px\",\n\n        backgroundColor: \"#ff0000\",\n        marginRight: \"20px\",\n        marginLeft: \"20px\",\n    }\n\n}));\n\n\nexport default function Dashbord(props) {\n    const classes = useStyles();\n\n    const [totalGoodsSend, setTotalGoodsSend] = React.useState({})\n\n    const [selectedAwaitedData, setSelectedAwaited] = React.useState(null)\n\n\n    const [selectemMonthAndYear, setSelectedMonthAndYear] = React.useState({ selectedYear: null, selectedMonth: null })\n\n    function setSelectedAwaitedData(data, month, year) {\n        setSelectedAwaited(data)\n        setSelectedMonthAndYear({ selectedYear: year, selectedMonth: month })\n    }\n    let presentYear = new Date().getFullYear().toString();\n\n\n\n\n    const { enqueueSnackbar } = useSnackbar();\n\n\n    const handleClickVariant = (message, variant) => {\n        // variant could be success, error, warning, info, or default\n        enqueueSnackbar(message, { variant });\n    };\n\n    React.useEffect(() => {\n        getAllSalesAwaitingAprovalStream(presentYear, setTotalGoods)\n    }, [])\n\n    function setTotalGoods(data) {\n        setTotalGoodsSend(data.data())\n    }\n\n    return (\n        <div className={classes.flexMain}>\n            <div className={`flex ${classes.FavoriteMain}`} style={{ display: props.drawerOpen ? \"none\" : \"block\" }}>\n                <div className={classes.Favheading}>\n                    <Typography>Orders To Aprove</Typography>\n                </div>\n                <div className={classes.FavBody}>\n                    {\n                        Object.keys(totalGoodsSend).map((keys, i) => {\n                            return keys === \"years\" ? <div>{totalGoodsSend[keys]}</div> :\n                                <DisplayAwaiting month={keys} year={totalGoodsSend[\"years\"]} data={totalGoodsSend[keys]} onclick={setSelectedAwaitedData} />\n                        })\n                    }\n                </div>\n            </div>\n\n            <div className={`flex ${classes.GridMain}`} style={{ width: props.drawerOpen ? \"100%\" : \"70%\" }}>\n                <div className={`grid ${classes.grid1}`}>\n                    <Typography>Details</Typography>\n                </div>\n\n                <div className={`grid ${classes.grid2}`}>\n\n                    {\n                        selectedAwaitedData !== null && <ApproveDeclinePan selectedAwaitedData={selectedAwaitedData} />\n                    }\n                </div>\n                <div className={`grid ${classes.grid3}`}>\n                    <Typography style={{ fontSize: 20, textTransform: 'capitalize' }} >Orders Decline </Typography>\n                </div>\n                <div className={`grid ${classes.grid4}`}>\n                </div>\n            </div>\n\n        </div>\n    )\n\n\n    async function onAccept(presentMonth, presentYear, salesRecord) {\n\n        try {\n\n\n            let dataExist = await isSalesRecordDataExist(presentYear)\n            if (dataExist) {\n                updateSalesRecords(presentYear, presentMonth, salesRecord).then(async (data) => {\n\n                    await deleteSalesAwaitingAproval(presentYear, presentMonth).then(async () => {\n                        await updateSalesTotal(salesRecord.Amount).then(async () => {\n\n                            handleClickVariant(\"data accepted\", \"success\")\n                            // addDataToState(salesRecord)\n                        }).catch((error) => {\n                            var errorMessage = error.message;\n                            handleClickVariant(errorMessage, \"error\")\n                        })\n\n                    }).catch((error) => {\n                        var errorMessage = error.message;\n                        handleClickVariant(errorMessage, \"error\")\n                    })\n\n                }).catch((error) => {\n                    var errorMessage = error.message;\n                    handleClickVariant(errorMessage, \"error\")\n                })\n\n            } else {\n                addSalesRecords(presentYear, {\n                    years: presentYear,\n                    [presentMonth]: [salesRecord],\n                }).then(async (data) => {\n                    await deleteSalesAwaitingAproval(presentYear, presentMonth).then(async() => {\n                        await updateSalesTotal(salesRecord.Amount).then(async () => {\n\n                            handleClickVariant(\"data accepted\", \"success\")\n                            // addDataToState(salesRecord)\n                        }).catch((error) => {\n                            var errorMessage = error.message;\n                            handleClickVariant(errorMessage, \"error\")\n                        })\n                    }).catch((error) => {\n                        var errorMessage = error.message;\n                        handleClickVariant(errorMessage, \"error\")\n                    })\n\n\n\n                }).catch((error) => {\n                    var errorMessage = error.message;\n                    handleClickVariant(errorMessage, \"error\")\n                })\n            }\n\n        } catch (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            handleClickVariant(errorMessage, \"error\")\n        }\n\n\n    }\n\n    function ApproveDeclinePan({ selectedAwaitedData }) {\n        const classes = useStyles();\n        let date = manipulateData(selectedAwaitedData.Date)\n        const [loading, setLoading] = React.useState(false)\n        return (\n            <div>\n                <div>{date}</div>\n                <div >amount  <span style={{ color: \"green\" }}>le:{selectedAwaitedData?.Amount}</span></div>\n                <div>send to {selectedAwaitedData?.Receiver}</div>\n\n                <div className={classes.btnFlx}>\n                    <Button className={classes.declineBtn}>Decline</Button>\n\n                    <Button className={classes.approvedBtn} onClick={async () => {\n                        setLoading(true)\n                        if (selectemMonthAndYear.selectedMonth !== null || selectemMonthAndYear.selectedYear !== null)\n                            await onAccept(selectemMonthAndYear.selectedMonth, selectemMonthAndYear.selectedYear, selectedAwaitedData).then(() =>\n                                setLoading(false))\n                    }\n                    }>Approved</Button>\n                    {loading && <CircularProgressBar size={25} />}\n                </div>\n            </div>\n\n        )\n    }\n\n    function DisplayAwaiting({ data, onclick, month, year }) {\n        const classes = useStyles();\n\n        return data.map((val, index) =>\n            <Card className={classes.cardMain} onClick={() => onclick(val, month, year)}>\n                <div className={classes.cardflex}>\n                    <div>{manipulateData(val.Date)}</div>\n                    <div style={{ color: \"green\" }}>Le:{val.Amount}</div>\n\n                </div>\n            </Card>\n        );\n\n\n\n    }\n    function manipulateData(data = \"\") {\n\n        if (data.seconds) {\n            data = new firebase.firestore.Timestamp(data.seconds, data.nanoseconds).toDate();\n        }\n        if (data instanceof Date) {\n            var dd = data.getDate()\n            var mm = data.getMonth()\n            var yyyy = data.getFullYear();\n\n            var min = data.getMinutes();\n            var hou = data.getHours();\n\n            return mm + '/' + dd + '/' + yyyy + \" @ \" + hou + \":\" + min;\n\n        } else {\n            return data;\n        }\n    }\n\n}\n\n","\nimport React from \"react\"\nimport \"../scss/login.css\"\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SalesRecord from \"../SalesRecord\"\nimport MoneyIcon from '@material-ui/icons/Money';\nimport Dashbord from \"./DashBord\"\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    marginTop: \"60px\",\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction PermanentDrawerLeft() {\n  const classes = useStyles();\n  const [selectedPage, selectAPage] = React.useState('Dashbord')\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n           {\n             selectedPage\n           }\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {[\n            { name: 'Dashbord', icon: DashboardIcon },\n            { name: 'Sales approved', icon: MoneyIcon },\n            { name: 'logout', icon: ExitToAppIcon },].map((item, index) => {\n              if (item.name === 'logout') {\n                // signoutOfApp() \n              }\n              ///logout\n\n              return (\n                <ListItem button key={index} onClick={() => selectAPage(item.name)}>\n                  <ListItemIcon>{<item.icon />}</ListItemIcon>\n                  <ListItemText primary={item.name} />\n                </ListItem>\n              )\n            })}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        {\n          selectedPage === 'Sales approved' && <SalesRecord displayEdit={false} />\n        }\n        {\n        selectedPage === 'Dashbord' && <Dashbord />\n        }\n      </main>\n    </div>\n  );\n}\n\n\n\nexport default function login() {\n\n\n  return (<div>\n    <PermanentDrawerLeft />\n  </div>);\n}","import React from \"react\"\r\nimport './scss/dashbord.css'\r\nimport Dashbord from './dashbord'\r\nimport AccountPayment from \"./AllAccountPayments\"\r\nimport YearlyCheck from \"./YearlyChecking\"\r\nimport Settings from './Settings'\r\nimport StockRecord from \"./StockRecord\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import FormDialog from \"./dialog\"\r\n// import FavoriteDoctorListCard from \"./cardFavoutite\"\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n// import DoctorListCard from \"./cardDocList\"\r\n// import OtherPlaces from \"./otherplaces\"\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SalesRecords from \"./SalesRecord\"\r\nimport StylesProvider from \"@material-ui/styles/StylesProvider\"\r\n\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { signoutOfApp } from \"../controller/firebaseAuthentication\"\r\nimport { useSnackbar } from 'notistack';\r\nimport { getAllUserData } from \"../controller/crudModules\"\r\nimport AnotherUser from \"./NotAdminViews/notAdminHome\"\r\n// const drawerWidth = 240;\r\nconst drawerWidth = 300;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    width: `100%`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawerPaper: {\r\n    marginTop: \"60px\",\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: {\r\n    height: \"200px\",\r\n    padding: 0, margin: 0,\r\n    backgroundColor: \"#ffffff\",\r\n// color:\"\"\r\n  },\r\n  drawerSubContainer: {\r\n    marginTop: \"10px\"\r\n  },\r\n  Avatar: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    position: \"absolute\",\r\n    fontSize: \"50px\",\r\n    margin: \"20px\",\r\n  },\r\n  menuButton: {\r\n    // marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawerOpen: {\r\n\r\n    zIndex: 1,\r\n    marginTop: \"60px\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    zIndex: 1,\r\n    marginTop: \"60px\",\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: 0,\r\n  }\r\n  , content: {\r\n    marginTop: \"60px\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  CompanyName: {\r\n    // color: \"#ffffff\",\r\n    fontSize: \"20px\",\r\n    // textAlign:\"bottom\"\r\n    position: \"absolute\",\r\n    overflow: 'hidden',\r\n    bottom: 0,\r\n    marginLeft: \"20px\",\r\n\r\n  }, backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction PermanentDrawerLeft() {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [selectedPage, setSelectedOpen] = React.useState('Dashbord');\r\n\r\n\r\n  const selectAPage = (page) => {\r\n    setSelectedOpen(page)\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n\r\n    setOpen(!open);\r\n    var content = document.getElementById(\"content\");\r\n\r\n    if (open) content.addEventListener(\"click\", () => {\r\n      setOpen(false);\r\n    })\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <FormDialog/> */}\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n          >\r\n            {open ? <ChevronLeftIcon /> : <MenuIcon />}\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" noWrap>\r\n            {selectedPage}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        // className={classes.drawer}\r\n        variant=\"permanent\"\r\n        className={open ? classes.drawerOpen : classes.drawerClose}\r\n        classes={{\r\n          paper: open ? classes.drawerOpen : classes.drawerClose\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <List>\r\n          <div className={`toolbar ${classes.toolbar}`} >\r\n            <Avatar className={classes.Avatar} style={{\r\n              display: !open && \"none\",\r\n            }}>P</Avatar>\r\n            <div className={classes.CompanyName} style={{\r\n              display: !open && \"none\",\r\n\r\n            }} >PETICO ENTERPRICE</div>\r\n\r\n          </div>\r\n\r\n        </List>\r\n\r\n        <Divider />\r\n        <div className={classes.drawerSubContainer}>\r\n\r\n          <List>\r\n            {[{ name: 'Dashbord', icon: DashboardIcon },\r\n            { name: 'Stock Records', icon: DataUsageIcon },\r\n            { name: 'Sales Records', icon: MoneyIcon },\r\n            { name: 'Account Payment', icon: PaymentIcon },\r\n            { name: 'Yearly Checking', icon: HistoryIcon },\r\n            { name: 'Settings', icon: SettingsIcon },\r\n            { name: 'logout', icon: ExitToAppIcon },].map((item, index) => {\r\n              if (item.name === 'logout') { signoutOfApp() }\r\n              ///logout\r\n\r\n              return (\r\n                <ListItem button key={index} onClick={() => selectAPage(item.name)}>\r\n                  <ListItemIcon>{<item.icon />}</ListItemIcon>\r\n                  <ListItemText primary={item.name} />\r\n                </ListItem>\r\n              )\r\n            })\r\n            }\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <div>powered by zaire</div>\r\n          </List>\r\n\r\n        </div>\r\n      </Drawer>\r\n\r\n      <main id=\"content\" className={` ${classes.content}`}>\r\n        {selectedPage === 'Dashbord' && <Dashbord drawerOpen={open} />}\r\n        {selectedPage === 'Stock Records' && <StockRecord />}\r\n        {selectedPage === 'Sales Records' && <SalesRecords />}\r\n        {selectedPage === 'Account Payment' && <AccountPayment />}\r\n        {selectedPage === 'Yearly Checking' && <YearlyCheck />}\r\n        {selectedPage === 'Settings' && <Settings />}\r\n        {selectedPage === 'logout' && <>\r\n          <Dashbord drawerOpen={open} />\r\n          <Backdrop className={classes.backdrop} open={true} onClick={() => { }}>\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n        </>\r\n        }\r\n\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default function Home({ usersID }) {\r\n  const classes = useStyles();\r\n\r\n  const [isAdmin, setISAdmin] = React.useState(null)\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClickVariant = (message, variant) => {\r\n    enqueueSnackbar(message, { variant });\r\n  };\r\n\r\n  React.useEffect(async() => {\r\nif(isAdmin===null)\r\n  await  getAllUserData(usersID).then((data) => {\r\n      if (data.exists) {\r\n        let userTypeAdmin = data.get(\"isUSersAdmin\")\r\n        setISAdmin(userTypeAdmin);\r\n        handleClickVariant(`login as admin: ${userTypeAdmin}`, \"success\")\r\n      }\r\n    }).catch((error)=>{\r\n      var errorMessage = error.message;\r\n      handleClickVariant(errorMessage, \"error\")\r\n    })\r\n  }, [isAdmin])\r\n\r\n\r\n    return isAdmin === null ? <Backdrop className={classes.backdrop} open={isAdmin === null} >\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop> :\r\n  \r\n      isAdmin===true? <><StylesProvider injectFirst> < PermanentDrawerLeft /></StylesProvider > </>\r\n      :<div style={{ width: \"100vw\", height: \"100vh\" }}><AnotherUser/></div>\r\n  \r\n\r\n}\r\n\r\n","import React, { useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ContextConsumer, ContextProvider } from \"../AppContextApi\"\r\nimport \"./scss/dialog.css\"\r\nimport StyleProvider from \"@material-ui/styles/StylesProvider\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { loginWithEmailAndPassword } from \"../controller/firebaseAuthentication\"\r\nimport { useSnackbar } from 'notistack';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Home from './home'\r\nimport DefaultModule from \"../controller/firebaseInitializer\"\r\n\r\n\r\nvar useStyle = makeStyles(theme => ({\r\n  dialogForm2: {\r\n\r\n  }, button: {\r\n    backgroundColor: theme.palette,\r\n    height: \"100%\",\r\n    fontSize: \"20px\",\r\n\r\n  }\r\n\r\n}))\r\n\r\n\r\n\r\nexport default function Login() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n\r\n\r\n  const handleClickVariant = (message, variant) => {\r\n    // variant could be success, error, warning, info, or default\r\n    enqueueSnackbar(message, { variant });\r\n  };\r\n\r\n  var classes = useStyle();\r\n\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n\r\n\r\n\r\n\r\n  // const [open, setOpen] = React.useState(false);\r\n  const [loading, SetIsLoading] = React.useState(false);\r\n  const [usersID, setUserId] = React.useState();\r\n\r\nfunction setUsersId(uid){\r\n  setUserId(uid)\r\n}\r\n\r\n  function setIsLoad(loading) {\r\n    SetIsLoading(loading)\r\n  }\r\n\r\n  return (\r\n    <ContextProvider>\r\n      <ContextConsumer>\r\n        {(val) => {\r\n\r\n          if ((!val.showDialog)) {\r\n            return <Home  usersID={usersID} />\r\n          } else\r\n            if (val.showDialog) {\r\n\r\n              return <StyleProvider injectFirst>\r\n                <div className=\"dialogMain\">\r\n                  <div className={\"dialogForm  dialogForm1Login\"}>\r\n                    {/* loginClick(!login) */}\r\n\r\n                    <div className=\"grid1 flexDis\">\r\n                      {loading && <CircularProgress />}\r\n                    </div>\r\n                    <div className=\"grid2 flexDis\">  <Button onClick={\r\n                      async () => {\r\n                        setIsLoad(true)\r\n                        try {\r\n                         await loginWithEmailAndPassword(emailRef.current.value, passwordRef.current.value)\r\n                            .then(async (user) => {\r\n                              if (user.user.uid) {\r\n                                setUsersId(user.user.uid);\r\n                                setIsLoad(false)\r\n                                val.login()\r\n                              }\r\n\r\n                            }\r\n                            )\r\n                            .catch((error) => {\r\n                              var errorCode = error.code;\r\n                              var errorMessage = error.message;\r\n                              setIsLoad(false)\r\n\r\n                              handleClickVariant(errorMessage, \"error\")\r\n                            });\r\n                        } catch (e) {\r\n                          handleClickVariant(e, \"warning\")\r\n                        }\r\n\r\n\r\n                      }\r\n                    } color=\"primary\">\r\n                      Login\r\n                  </Button>\r\n                    </div>\r\n                    <div className=\"grid3 centerall\">\r\n                      <TextField\r\n                        inputRef={passwordRef}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid4 centerall\">\r\n                      <TextField\r\n                        inputRef={emailRef}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid5 centerall\">\r\n                      <DialogContentText>\r\n                        Welcome\r\n               </DialogContentText>\r\n                    </div>\r\n                    <div className=\"grid6 centerall\">\r\n                      <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </StyleProvider>\r\n\r\n            }\r\n        }}\r\n\r\n      </ContextConsumer>\r\n    </ContextProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// <div className={`dialogForm2 ${sign ? \"dialogForm2Signup\" : \"none\"} ${login ? \"dialogForm2Login\" : \"none\"} ${classes.dialogForm2}`}>\r\n\r\n// <div className={`grid0 ${classes.grid0}`}>\r\n\r\n//   <Button className={`button ${classes.button}`} onClick={() => { }} endIcon={<Gmail style={{ fontSize: \"30px\", color: \"skyblue\" }} />} color=\"primary\">\r\n//     sign up with gmail\r\n//       </Button>\r\n\r\n// </div>\r\n\r\n// <div className=\"grid1 flexDis\">  <Button onClick={() => { }} color=\"primary\">\r\n//   sign up\r\n//     </Button></div>\r\n\r\n// {/* signClick(!login); */}\r\n// <div className=\"grid2 flexDis\">  <Button onClick={() => { logInClicked(); signClick(false) }} color=\"primary\">\r\n//   Login\r\n// </Button></div>\r\n// <div className=\"grid3 centerall\">\r\n//   <TextField\r\n//     autoFocus\r\n//     margin=\"dense\"\r\n//     id=\"setPassword\"\r\n//     label=\"Password\"\r\n//     type=\"password\"\r\n//     fullWidth\r\n//   />\r\n// </div>\r\n// <div className=\"grid4 centerall\">\r\n//   <TextField\r\n//     autoFocus\r\n//     margin=\"dense\"\r\n//     id=\"setEmail\"\r\n//     label=\"Email Address\"\r\n//     type=\"email\"\r\n//     fullWidth\r\n//   />\r\n// </div>\r\n\r\n// <div className=\"grid5 centerall\">\r\n//   <DialogContentText>\r\n//     Welcome\r\n//   </DialogContentText>\r\n// </div>\r\n// <div className=\"grid6 centerall\">\r\n//   <DialogTitle id=\"form-dialog-title\"> Sign Up</DialogTitle>\r\n// </div>\r\n// </div>","import './App.css';\n// import Home from './views/home'\nimport React from 'react';\nimport { SnackbarProvider} from 'notistack';\nimport Login from \"./views/Login\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SnackbarProvider>\n     <Login/>\n     </SnackbarProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}